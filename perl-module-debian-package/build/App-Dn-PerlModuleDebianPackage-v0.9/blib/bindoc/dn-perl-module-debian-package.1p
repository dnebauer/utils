.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DN-PERL-MODULE-DEBIAN-PACKAGE 1p"
.TH DN-PERL-MODULE-DEBIAN-PACKAGE 1p 2024-07-29 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
dn\-perl\-module\-debian\-package \- find debian package providing perl module
.SH USAGE
.IX Header "USAGE"
\&\fBdn-perl-module-debian-package\fR [\fB\-a\fR \fImodule\fR ...] [\fI\-n\fR] module
.PP
\&\fBdn-perl-module-debian-package \-h\fR
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Finds the file loaded when a specified module is loaded, and finds the debian
package providing that file.
.PP
It may be necessary to provide additional module names. See the notes for the
\&\f(CW\*(C`\-\-additional_modules\*(C'\fR option for more details.
.PP
The debian package name is also copied to the system clipboard unless this is
suppressed by the \f(CW\*(C`\-\-no_copy\*(C'\fR option. On X\-windows systems such as
linux there are three \fIselections\fR (the term for copied or cut text):
\&\fIprimary\fR, \fIsecondary\fR and \fIclipboard\fR. This script copies the package name
to the \fIprimary\fR and \fIclipboard\fR selections. These selections are pasted
using the middle mouse button and ctrl+v keys, respectively. In terminals it
may be necessary to paste with shift key + middle mouse button, and
shift+ctrl+v keys, respectively.
.SH CONFIGURATION
.IX Header "CONFIGURATION"
There is no configuration required for this script.
.SH "REQUIRED ARGUMENTS"
.IX Header "REQUIRED ARGUMENTS"
.SS module
.IX Subsection "module"
The perl module to analyse. String. Required.
.SH OPTIONS
.IX Header "OPTIONS"
.SS "\-a | \-\-additional_modules MODULE ..."
.IX Subsection "-a | --additional_modules MODULE ..."
Additional perl module(s) required to run perl command that discovers module
file.
.PP
To specify multiple additional modules:
.IP \(bu 4
Use the \f(CW\*(C`\-a\*(C'\fR option for each additional module, or
.IP \(bu 4
Provide multiple modules to \f(CW\*(C`\-a\*(C'\fR as a comma-delimited string (with no spaces),
or
.IP \(bu 4
A combination of both approaches.
.PP
The need for an additional module may suggested by an error message when
running the script. For example, when analysing module \f(CW\*(C`MooX::Options\*(C'\fR the
script returns the following error message:
.PP
.Vb 3
\&    Can\*(Aqt find the method <with> in <main> ! Ensure to load a Role::Tiny \e
\&    compatible module like Moo or Moose before using MooX::Options.\e
\&    at \-e line 0.
.Ve
.PP
While the message is somewhat opaque, it is clearly asking for \f(CW\*(C`Moo\*(C'\fR or
\&\f(CW\*(C`Moose\*(C'\fR. Providing either of these as an additional module results in
successful execution.
.SS "\-n | \-\-no_copy"
.IX Subsection "-n | --no_copy"
Do not copy the debian package name to the clipboard. Flag. Optional.
Default: false.
.SS "\-h | \-\-help"
.IX Subsection "-h | --help"
Display help and exit. Flag. Optional. Default: false.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
The exit code is 0 for successful execution and 1 if the script does a
controlled exit following an error. If the script crashes unexpectedly
the error code is that given by the system.
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
This module emits no custom warnings or errors, though dependent modules may do
so.
.SH INCOMPATIBILITIES
.IX Header "INCOMPATIBILITIES"
There are no known incompatibilities.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH DEPENDENCIES
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
App::Dn::PerlModuleDebianPackage, Moo, namespace::clean, strictures, version.
.SH AUTHOR
.IX Header "AUTHOR"
David Nebauer <david@nebauer.org>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2024 David Nebauer <david@nebauer.org>
.PP
This script is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
