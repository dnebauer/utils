# dn-qk-deb resources file
# [generated by dn-qk-deb on 2021-03-14 at 18:28:10]
# ------------------------------------------------------------
# Each line consists of key-value pairs
# separated by whitespace. If any key or value contains
# whitespace it must be enclosed by double quotation marks.
# Empty lines and comment lines (beginning with hashes)
# are ignored.
# Any unrecognised key will generate a fatal error
# Any key without a value will generate a fatal error
# Some names can be used only once while others can
# be used multiple times.
# ------------------------------------------------------------
 
# Package name
# Name of the package to be generated.
# Must not contain whitespace.
# Required. One only.
package-name dn-mp3-tags
 
# Package version
# Version number for package.
# Required. One only.
version 0.9
 
# Script and binary files
# Executable files to be packaged.
# Can be standard ('bin-file') or superuser-only ('sbin-file').
# Default value of 'bin-file' in built deb package: /usr/bin
# Default value of 'sbin-file' in built deb package: /usr/sbin
# Required (unless a library package). Multiple allowed
bin-file dn-mp3-tags
#sbin-file 
 
# Manpages
# Man pages to package.
# Default location in built deb package: /usr/share/man/man1
# Required (unless a library package). Multiple allowed.
man-file dn-mp3-tags.1
 
# Data files
# Data files to package.
# Default location in built deb package: /usr/share/\$(PACKAGE).
# Optional. Multiple allowed.
#data-file 
 
# Icon file
# Icon file to package.
# Must be xpm format no larger than 32x32.
# Useful command is: 'convert icon.png -geometry 32x32 icon.xpm'.
# Default location in built deb package: /usr/share/icons.
# Note icons are not put into an application subdirectory
# -- be careful of filename clashes.
# Optional. Multiple allowed.
#icon-file 
 
# Desktop file
# Desktop file to package.
# Must conform to freedesktop.org Desktop Entry Specification
# (see http://standards.freedesktop.org/desktop-entry-spec/)
# Default location in built deb package: /usr/share/applications.
# Note desktop files are not put into an application subdirectory
# -- be careful of filename clashes.
# Optional. Multiple allowed.
#desktop-file 
 
# Configuration files
# Configuration files to package.
# Default location in built deb package: /etc/\$(PACKAGE).
# Optional. Multiple allowed.
#conf-file 
 
# Executable library files
# Executable programs run by other programs.
# Default value in built deb package: /usr/libexec/\$(PACKAGE).
# Optional. Multiple allowed.
#libexec-file 
 
# Library data files
# Data files used by other programs.
# Default value in built deb package: /usr/lib/\$(PACKAGE).
# Optional. Multiple allowed.
#libdata-file 
 
# Debconf file
# Debian build system debconf file
# In final package is named 'PACKAGE.config'
# Optional. One only
#debconf-file 
 
# Templates file
# Debian build system templates file
# In final package is named 'PACKAGE.templates'
# Optional. One only
#templates-file 
 
# Pre-install file
# Debian build system pre-install file
# In final package is named 'PACKAGE.preinst'
# Optional. One only
#preinstall-file 
 
# Post-install file
# Debian build system post-install file
# In final package is named 'PACKAGE.postint'
# Optional. One only
#postinstall-file 
 
# Pre-remove file
# Debian build system pre-remove file
# In final package is named 'PACKAGE.prerm'
# Optional. One only
#preremove-file 
 
# Post-remove file
# Debian build system post-remove file
# In final package is named 'PACKAGE.postrm'
# Optional. One only
#postremove-file 
 
# Bash completion file
# Debian build system bash completion file
# In final package is named 'PACKAGE.bash-completion'
# Optional. One only
#bash-completion-file 
 
# Install file
# Debian build system install file
# In final package is named 'PACKAGE.install'
# Can be used in conjunction with 'extra' key
# Optional. One only
install-file install
 
# Extra files and directories
# Extra distribution files and directories
# Copied recursively into root of distribution
# Not added to deb package unless in combination
# with an install file (see 'install-file' key)
# Optional. Multiple allowed
extra-path contrib
 
# Control summary
# One line summary of script for inclusion in the
# package 'control' file.
# This, in turn, is displayed by many package managers.
# Must be no longer than 60 characters.
# Required. One only.
control-summary set mp3 tags for audio files in a directory
 
# Control description
# Description of script. This is a longer description
# than the one line summary and can stretch over
# multiple lines. Each line can be no longer than
# 60 characters. Paragraphs can be separated by a line
# consisting of a single period ('.'). This description
# will be included in the package 'control' file. This,
# in turn, is displayed by many package managers.
# Required. Multiple allowed.
control-description Used to set mp3 tags that commonly change with each track
control-description in an album. All mp3 files in the current directory are
control-description processed sequentially (using bash's default file listing
control-description order).
control-description .
control-description If the 'n' flag is used the tracks are numbered in file sort
control-description order. Numbering starts at one and automatically increments.
control-description .
control-description The title and performer can be set manually for each file in
control-description turn. Use the 't' flag to set the track title and the 'p' or
control-description 'a' flag to set performer/artist.
control-description .
control-description For track performer the default suggestion for each file is
control-description identical to the existing tag. For track title the default
control-description default suggestion for each file is the existing tag
control-description converted to title case.
control-description .
control-description The suggestions for track performer and/or title are
control-description suppressed with the 'b' flag.
control-description .
control-description The 'f' option can be used when setting performers or
control-description titles, but not both. This option nominates a file
control-description containing default options, one per line. It is assumed the
control-description values are given in the same sort order as file names.
control-description These performers or titles are used without alteration as
control-description default suggestions for the mp3 files. There must be the
control-description same number of lines in the file as mp3 files in the
control-description directory, or the script will exit with an error. If both
control-description the 'b' flag and 'f' option are present, the 'b' flag is
control-description ignored.
control-description .
control-description By default, mp3info2 is used to alter file tags. The tools
control-description eyeD3 or id3v2 can be used instead if the 'e' or 'i' flag is
control-description used, respectively.
control-description .
control-description At least one of the 'n', 't', 'p' or 'a' flags is required
control-description for the script to perform any action. If no flags are
control-description provided a help message is displayed.
 
# Dependency
# The name of a single package this package depends on.
# Can include minimum version.
# Optional. Multiple allowed.
## dn* functions
depends-on libdncommon-bash (>= 3.40-1)
## mp3info2
depends-on libmp3-tag-perl (>= 1.13-1)
## eyeD3
depends-on eyed3 (>= 0.8.10-1.1)
## id3v2
depends-on id3v2 (>= 0.1.12+dfsg-3)
## getopt
depends-on util-linux (>= 2.36.1-6)
 
# Copyright year
# Year of copyright
# Required. One only.
year 2021
 
# Email
# Email address of package maintainer
# Required. One only.
email david@nebauer.org
 
# Author
# Author of script
# Required. Multiple allowed.
author David Nebauer
