.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Dn::PassDump 3pm"
.TH App::Dn::PassDump 3pm 2024-07-03 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
App::Dn::PassDump \- write passwords to file
.SH VERSION
.IX Header "VERSION"
This documentation is for \f(CW\*(C`App::Dn::PassDump\*(C'\fR version 0.5.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use App::Dn::PassDump;
\&
\&    App::Dn::PassDump\->new_with_options\->run;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module accesses password information stored by
Pass <https://www.passwordstore.org/>, "the standard unix password manager",
and dumps (writes) it to an output file. The output format can be plain text or
markdown.
.SS "Pass configuration"
.IX Subsection "Pass configuration"
The module accesses all password files stored in the password file tree. It
does this one at a time. It is not possible for the user to enter their
password for accessing these files because all console output is being
captured. For that reason the module initially accesses just one password file
without capturing the output, i.e., the user is able to enter the password for
this file. Pass must be configured to stay authenticated for a few minutes;
this can be done using
gpg-agent <https://www.gnupg.org/documentation/manuals/gnupg/>.
.SS "Output format"
.IX Subsection "Output format"
The output file has a header which includes a title, author and date of
writing. The file has a footer which states 'END OF FILE'.
.PP
In between the header and footer is a section for each password file, listed
alphabetically and with a horizontal line between them.
.PP
Here is the layout for each password section:
.PP
.Vb 1
\&    url
\&
\&    password
\&
\&    field_1: value_1
\&    field_2: value_2
\&    etc.
.Ve
.PP
In markdown-formatted output:
.IP \(bu 4
The url is a second-level header.
.IP \(bu 4
The password is placed within a code fence.
.IP \(bu 4
Values which include a '/' or '\e' can cause fatal errors during pdf generation.
For this reason any values containing either of these characters are enclosed
in backticks to ensure they are rendered as code spans. (This prevents their
interference with pdf production.) Unfortunately, most pdf generation processes
do not wrap code spans, so if they are long these values may extend beyond the
pdf page edge.
.IP \(bu 4
Lines whose values do \fInot\fR include '\e' or '/' will be split across multiple
lines if they are more than 70 characters long. Split lines have a four-space
hanging indent.
.PP
In text output the password and field lines are indented by two spaces. There
is no line splitting as occurs with markdown output.
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
.SS Options
.IX Subsection "Options"
\fI\-a | \-\-author AUTHOR\fR
.IX Subsection "-a | --author AUTHOR"
.PP
Author to put in header of dump file.
.PP
String. Optional. Default: 'David Nebauer'.
.PP
\fI\-d | \-\-dump_file /FILE/PATH\fR
.IX Subsection "-d | --dump_file /FILE/PATH"
.PP
Path of dump file.
.PP
File path. Optional. Default: \fI~/.password\-store/dump.{md,txt}\fR where the
extension depends on output format \- 'md' for markdown output and 'txt' for
text output.
.PP
\fI\-f | \-\-format FORMAT\fR
.IX Subsection "-f | --format FORMAT"
.PP
Format of output.
.PP
String. Optional. Must be either 'markdown' or 'text'. Default: 'markdown'.
.PP
\fI\-p | \-\-preserve\fR
.IX Subsection "-p | --preserve"
.PP
Whether to preserve an existing dump file.
.PP
Flag. Optional. Default: false.
.PP
\fI\-r | \-\-root /DIR/PATH\fR
.IX Subsection "-r | --root /DIR/PATH"
.PP
Root passwords directory.
.PP
Directory path. Optional. Default: \fI~/.password\-store\fR.
.PP
\fI\-h | \-\-help\fR
.IX Subsection "-h | --help"
.PP
Display help and exit.
.SS Attributes
.IX Subsection "Attributes"
None.
.SS "Configuration files"
.IX Subsection "Configuration files"
None used.
.SS "Environment variables"
.IX Subsection "Environment variables"
None used.
.SH SUBROUTINES/METHODS
.IX Header "SUBROUTINES/METHODS"
.SS \fBrun()\fP
.IX Subsection "run()"
The only public method. It dumps passwords to file as described in
"DESCRIPTION".
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
.SS "Dump file 'FILE' already exists"
.IX Subsection "Dump file 'FILE' already exists"
Occurs when the \f(CW\*(C`\-p\*(C'\fR option to preserve any existing dump file of the same
name, and such a file exists. Fatal.
.SS "Invalid format 'FORMAT'"
.IX Subsection "Invalid format 'FORMAT'"
An invalid format has been provided with the \f(CW\*(C`\-f\*(C'\fR option. Fatal.
.SS "Multiple author names provided"
.IX Subsection "Multiple author names provided"
Occurs when multiple author names are provided using the \f(CW\*(C`\-a\*(C'\fR option. Fatal.
.SS "Multiple dump file paths provided"
.IX Subsection "Multiple dump file paths provided"
Occurs when multiple dump file names are provided using the \f(CW\*(C`\-d\*(C'\fR option.
Fatal.
.SS "Multiple formats provided"
.IX Subsection "Multiple formats provided"
Occurs when multiple formats are provided using the \f(CW\*(C`\-f\*(C'\fR option. Fatal.
.SS "Multiple root passwords directories provided"
.IX Subsection "Multiple root passwords directories provided"
Occurs when multiple root directories are provided using the \f(CW\*(C`\-r\*(C'\fR option.
Fatal.
.SS "No *.gpg files found in ROOT"
.IX Subsection "No *.gpg files found in ROOT"
Occurs when no \fI.gpg\fR (password) files are found in the specified root
directory. Fatal.
.SS "pass: ERROR"
.IX Subsection "pass: ERROR"
Occurs when \f(CW\*(C`pass\*(C'\fR fails to retrieve a password from a password file. Fatal.
.SS "Unable to create 'FILE'"
.IX Subsection "Unable to create 'FILE'"
The operating system was unable to write the password dump file. Fatal.
.SS "Unable to delete existing dump file 'FILE'"
.IX Subsection "Unable to delete existing dump file 'FILE'"
Occurs when the operating system is unable to delete an existing dump file.
The system error is displayed after this message. Fatal.
.SH INCOMPATIBILITIES
.IX Header "INCOMPATIBILITIES"
There are no known incompatibilities.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH DEPENDENCIES
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
Carp, Const::Fast, Date::Simple, English, Env, File::Find::Rule, IPC::Run, Moo,
MooX::HandlesVia, MooX::Options, namespace::clean, strictures,
Term::ProgressBar::Simple, Text::Wrap, Type::Tiny, Types::Path::Tiny,
Types::Standard, version.
.SS Executables
.IX Subsection "Executables"
pass.
.SH AUTHOR
.IX Header "AUTHOR"
David Nebauer <mailto:david@nebauer.org>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2024 David Nebauer <mailto:david@nebauer.org>
.PP
This script is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
