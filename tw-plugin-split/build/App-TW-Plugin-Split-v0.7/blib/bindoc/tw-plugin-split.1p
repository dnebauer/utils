.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "TW-PLUGIN-SPLIT 1p"
.TH TW-PLUGIN-SPLIT 1p 2024-07-17 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
tw\-plugin\-split \- convert single json or tid TiddlyWiki plugin file
.SH USAGE
.IX Header "USAGE"
\&\fBtw-plugin-split\fR [\fB\-s\fR] \fBplugin_file\fR
.PP
\&\fBtw-plugin-split \-h\fR
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This script converts a single \f(CW\*(C`tid\*(C'\fR or \f(CW\*(C`json\*(C'\fR plugin file for
TiddlyWiki <https://tiddlywiki.com/> into a group of files which can be used
with a node.js server installation of TiddlyWiki. Each plugin tiddler is output
into one or two files (depending on whether the metadata is contained in the
main tiddler file or split out into a \fImeta\fR file), and the plugin also has a
\&\fIplugin.info\fR file.
.PP
The main work of plugin extraction is done by the node.js version of tiddlywiki
which must be installed on the system. More specifically, the executable
\&\fItiddlywiki\fR must be available.
.PP
The plugin extraction command is:
.PP
.Vb 1
\&    tiddlywiki \-\-import PLUGIN_FILE DESERIALIZER \-\-savewikifolder ./
.Ve
.PP
where DESERIALIZER is \f(CW\*(C`application/x\-tiddler\*(C'\fR or \f(CW\*(C`application/json\*(C'\fR for
\&\f(CW\*(C`tid\*(C'\fR or \f(CW\*(C`json\*(C'\fR plugin files, respectively
.SS "Output file names"
.IX Subsection "Output file names"
All files are output to the current working directory.
.PP
Default tiddler file names are derived from tiddler title fields. Most plugin
authors use the title schema \fR\f(CI$:\fR\fI/plugins/AUTHOR/PLUGIN/name\fR, where AUTHOR is
the plugin author's handle and PLUGIN is the plugin's name. After conversion to
file names, this becomes \fI\fR\f(CI$_\fR\fI\|_plugin_AUTHOR_PLUGIN_name\fR. For example, the
files extracted from the plugin ContextSeach by danielo515 are:
    \f(CW$_\fR\|_plugins_danielo515_ContextPlugin_Caption.tid
    \f(CW$_\fR\|_plugins_danielo515_ContextPlugin_readme.tid
    \f(CW$_\fR\|_plugins_danielo515_ContextPlugin_Stylesheet_results.css
    \f(CW$_\fR\|_plugins_danielo515_ContextPlugin_Stylesheet_results.css.meta
    \f(CW$_\fR\|_plugins_danielo515_ContextPlugin_visualizer.tid
    \f(CW$_\fR\|_plugins_danielo515_ContextPlugin_widgets_context.js
    \f(CW$_\fR\|_plugins_danielo515_ContextPlugin_widgets_context.js.meta
    Context Search.tid
    plugin.info
.PP
If the \f(CW\*(C`\-s\*(C'\fR (\f(CW\*(C`\-\-simplify\*(C'\fR) option is used, plugin files of the form
\&\fR\f(CI$_\fR\fI\|_plugin_AUTHOR_PLUGIN_name\fR are changed to \fIname\fR. For the plugin above
the extracted files become:
    Caption.tid
    readme.tid
    Stylesheet_results.css
    Stylesheet_results.css.meta
    visualizer.tid
    widgets_context.js
    widgets_context.js.meta
    Context Search.tid
    plugin.info
.PP
In order for the file names to be simplified at least two of the extracted
files must begin with \fR\f(CI$_\fR\fI\|_plugins_\fR. The longest file stem shared by all files
beginning with \fI\fR\f(CI$_\fR\fI\|_plugins_\fR is then determined. This stem will be removed
from these file names unless doing so would:
.IP \(bu 4
Result in duplicate file names, or
.IP \(bu 4
Leave only a file extension remaining. (Actually, the test is just whether the
resulting file name begins with a period \- \f(CW\*(C`.\*(C'\fR.)
.SH CONFIGURATION
.IX Header "CONFIGURATION"
This script does not use configuration files or environment variables.
.SH "REQUIRED ARGUMENTS"
.IX Header "REQUIRED ARGUMENTS"
.SS plugin_file
.IX Subsection "plugin_file"
Path of the json plugin file to be converted. File path. Required.
.SH OPTIONS
.IX Header "OPTIONS"
.SS "\-f | \-\-format FORMAT"
.IX Subsection "-f | --format FORMAT"
Plugin file format. Optional. Valid values: 'json', 'tid'.
.PP
Default: \f(CW\*(C`json\*(C'\fR for files with a \fI.json\fR extension,
\&\f(CW\*(C`tid\*(C'\fR for all other files.
.SS "\-s | \-\-simplify"
.IX Subsection "-s | --simplify"
Whether to simplify the extracted plugin file names.
.PP
Flag. Optional. Default: false.
.SS "\-h | \-\-help"
.IX Subsection "-h | --help"
Display help and exit. Flag. Optional. Default: false.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
The exit code is 0 for successful execution and 1 if the script does a
controlled exit following an error. If the script crashes unexpectedly
the error code is that given by the system.
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
This script emits no custom warning or error messages, although dependent
modules may do so.
.SH INCOMPATIBILITIES
.IX Header "INCOMPATIBILITIES"
None known.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH DEPENDENCIES
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
App::TW::Plugin::Join, Moo, namespace::clean, strictures, version.
.SH AUTHOR
.IX Header "AUTHOR"
David Nebauer <david@nebauer.org>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2024 David Nebauer <david@nebauer.org>
.PP
This script is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
