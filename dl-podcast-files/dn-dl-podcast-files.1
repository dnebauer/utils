.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DN-DL-PODCAST-FILES 1"
.TH DN-DL-PODCAST-FILES 1 2024-03-09 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
dn\-dl\-podcast\-files \- downloads podcast files
.SH USAGE
.IX Header "USAGE"
\&\fBdn-dl-podcast-files\fR \fI\-f file\fR
.PP
\&\fBdn-dl-podcast-files\fR \fI\-h\fR
.SH OPTIONS
.IX Header "OPTIONS"
.IP \fB\-f\fR 4
.IX Item "-f"
Name of input file.
.Sp
Required.
.IP \fB\-h\fR 4
.IX Item "-h"
Display help and exit.
.SH DESCRIPTION
.IX Header "DESCRIPTION"
A script developed for downloading podcast files that are too old to appear in a podcast feed but that are still included in the rss feed file online. Details of the files are obtained and a yaml input file created. The input file lists the following for each download file: url, title, date and time. Date and time are the date and time the file was published. Required values are url, title and time. Date is optional.
.PP
Here is an example input file. It lists episodes from the "Fear the Boot" podcast.
.PP
.Vb 10
\&    \-\-\-
\&    url: http://media.libsyn.com/media/feartheboot/feartheboot_0001.mp3
\&    title: Episode 1 \- when player abilities eclipse character abilities
\&    date: 2006\-05\-15
\&    time: 2230
\&    \-\-\-
\&    url: http://media.libsyn.com/media/feartheboot/feartheboot_0002.mp3
\&    title: Episode 2 \- creating a group template
\&    date: 2006\-05\-23
\&    time: 0611
\&    \-\-\-
\&    url: http://media.libsyn.com/media/feartheboot/feartheboot_0003.mp3
\&    title: Episode 3 \- character creation
\&    date: 2006\-05\-30
\&    time: 0836
.Ve
.PP
The downloaded file name consists of the url filename with a prefix constructed from the episode's date and, if provided, time. Here are the download files corresponding to the input file shown above:
.PP
.Vb 3
\&    20060515\-2230_feartheboot_0001.mp3
\&    20060523\-0611_feartheboot_0002.mp3
\&    20060530\-0836_feartheboot_0003.mp3
.Ve
.SH DEPENDENCIES
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
Carp, Const::Fast, English, File::Copy, File::Fetch, Moo, MooX::HandlesVia,
MooX::Options, Role::Utils::Dn, Time::Simple, Types::DateTime, Types::Standard,
Types::URI, YAML, autodie, namespace::clean, strictures, version.
.SS Executables
.IX Subsection "Executables"
wget.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH AUTHOR
.IX Header "AUTHOR"
David Nebauer <davidnebauer@hotkey.net.au>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2015 David Nebauer <davidnebauer@hotkey.net.au>
.PP
This script is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
