# Midnight Commander 3.0 extension file
# Source: generated by package @pkg@ (see 'man @pkg@' for details)

# OVERRIDES

### Archives ###

# rar
regex/i/\.r(ar|[0-9][0-9])$
	Open=%cd %p/dn-urar://
	View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view rar
	Extract=7z x %f

# mht
regex/i/\.mht(ml)?$
	Open=(firefox %f >/dev/null 2>&1 &)


### Images ###

type/i/^GIF
	Include=image

type/i/^JPEG
	View=%view{ascii} identify %f; test -x /usr/bin/exif && echo && exif %f 2>/dev/null
	Include=image

type/i/^PC\ bitmap
	Include=image

type/i/^PNG
	Include=image

type/i/^TIFF
	Include=image

type/i/^PBM
	Include=image

type/i/^PGM
	Include=image

type/i/^PPM
	Include=image

type/i/^Netpbm
	Include=image

shell/.xcf
	Open=(gimp %f &>/dev/null &)

shell/.xbm
	Open=bitmap %f

shell/.xpm
	Include=image
	View=sxpm %f

shell/.ico
	Include=image

# 2015-09-29: no longer opening with 'see'
#  - run-mailcap now copies file to temporary directory before opening
#  - this prevents scrolling through images in directory
# 2015-09-29: opening with gwenview
#  - do not quote %f as underlying filesystem backslash escapes them,
#    and if that is then quoted gwenview thinks the backslash is part
#    of the file path, and cannot locate the file
# 2022-07-09: opening with imv-x11
include/image
	#Open=(see %f &>/dev/null &)
	#Open=(gwenview %f &>/dev/null &)
	Open=(imv-x11 -d -c 'open ./*' "%f" &>/dev/null &)
	#View=%view{ascii} asciiview %f
	View=%view{ascii} identify %f
	Edit=(gimp %f &>/dev/null &)


### Sound files ###

# [*.mp3]
regex/i/\.mp3$
	Open=(run-mailcap audio/mpeg:%f >/dev/null 2>&1 &)
	## mp3info2 action does not work as View action
	## mp3info2 action *does* work as an Edit action
	## explanation for View action failure is not known
	#View=%view{ascii} mp3info2 %f
	View=%view{ascii} mpg123 -vtn1 %f 2>&1 | sed -n '/^Title/,/^Comment/p;/^MPEG/,/^Audio/p'
	Edit=%view{ascii} mp3info2 %f

# [*.wma]
regex/i/\.wma$
	Open=(run-mailcap audio/x-ms-wma:%f >/dev/null 2>&1 &)
	View=%view{ascii} mplayer -quiet -slave -frames 0 -vo null -ao null -identify %f 2>/dev/null || file %f


### Play lists ###
# [copy existing playlist actions from later in file to here,
#  before the plain text actions, because playlist files are plain text]

regex/i/\.(m3u|pls)$
	Open=/usr/lib/mc/ext.d/sound.sh open playlist


### Documents ###

# HTML
regex/i/\.htm[l]?$
	Open=(if test -n "" && test -n "$DISPLAY"; then ( file://%d/%p &) 1>&2; else qutebrowser %f || google-chrome %f || firefox %f || lynx -force_html %f || ${PAGER:-more} %f; fi) 2>/dev/null
	View=%view{ascii} links -dump %f 2>/dev/null || w3m -dump %f 2>/dev/null || lynx -dump -force_html %f

# DVI (plain and gzipped)
regex/i/\.dvi(\.gz)?$
	Include=output

# PostScript (gzipped)
regex/i/\.ps\.gz$
	Include=output

# Gzipped PDF
regex/i/\.pdf\.gz$
	Include=output

# PDF
regex/i/\.pdf$
	Include=output

include/output
	Open=(okular %f >/dev/null 2>&1 &)


# ADDITIONS

### Sound files ###

# mpc (Musepack Compressed Audio)
# - omission of mime-type in run-mailcap command causes it
#   to try and match the extension in the mime.types files
#   (see 'man mime.types' and 'man run-mailcap')
# - the mime.types file defines a mime-type
# - the mailcap file (see 'man mailcap') defines the
#   command to play the file with that extension
# [*.mpc]
regex/i/\.mpc$
	Open=(run-mailcap %f >/dev/null 2>&1 &)

# [*.ac3]
regex/i/\.ac3$
	Open=(run-mailcap audio/ac3:%f >/dev/null 2>&1 &)

# [*.m4a]
regex/i/\.m4a)$
	Open=(run-mailcap audio/mp4:%f >/dev/null 2>&1 &)

# [*.flac]
regex/i/\.flac$
	Open=(run-mailcap audio/flac:%f >/dev/null 2>&1 &)
	View=%view{ascii} mplayer -quiet -slave -frames 0 -vo null -ao null -identify %f 2>/dev/null || file %f


### Video ###

# [*.m2v]
regex/i/\.m2v$
	Include=video

# [*.mp4]
regex/i/\.mp4$
	Open=(run-mailcap video/mp4:%f >/dev/null 2>&1 &)

# [*.rm]
regex/i/\.rm$
	Open=(run-mailcap application/vnd.rn-realmedia:%f >/dev/null 2>&1 &)


### Documents ###

# Microsoft Word Document
regex/i/\.docx$
	Open=/usr/lib/mc/ext.d/doc.sh open msdoc
	View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view msdoc

# [*.planner]
regex/\.planner$
	Open=(planner %f > /dev/null 2>&1 &)

# [*.azw]
type/i/^Mobipocket E-book
	Include=azwbook

regex/i/\.azw$
	Include=azwbook

include/azwbook
	Open=(ebook-viewer %f >/dev/null 2>&1 &)
	View=(sensible-editor %f >/dev/null 2>&1 &)

# [*.epub]
type/i/^EPUB\ ebook\ data
	Include=epubbook

type/i/^EPUB\ document
	Include=epubbook

type/i/^EPUB\ document\ EPUB\ document
	Include=epubbook

regex/i/\.epub$
	Include=epubbook

include/epubbook
	Open=(ebook-viewer %f >/dev/null 2>&1 &)
	View=(sensible-editor %f >/dev/null 2>&1 &)

# [*.mobi]
regex/i/\.mobi$
	Open=(ebook-viewer %f >/dev/null 2>&1 &)
	View=(sensible-editor %f >/dev/null 2>&1 &)

# LibreOffice (only those extensions missed by default mechanism)

## [*.doc]
regex/i/\.doc$
	Include=libreoffice

## [*.rtf]
regex/i/\.rtf$
	Include=libreoffice

## [*.fodt]
regex/i/\.fodt$
	Include=libreoffice

## [*.xlsx]
regex/i/\.xlsx$
	Include=libreoffice

## [*.xlsb]
regex/i/\.xlsb$
	Include=libreoffice

## [*.xlsm]
regex/i/\.xlsm$
	Include=libreoffice

## [*.ppt]
regex/i/\.ppt$
	Include=libreoffice

## [*.pptx]
regex/i/\.pptx$
	Include=libreoffice

include/libreoffice
	Open=(libreoffice %f >/dev/null 2>&1 &)

# scribus

## [*.sla]
regex/i/\.sla$
	Include=scribus

include/scribus
	Open=(scribus %f >/dev/null 2>&1 &)

# markdown

## [*.md]
regex/i/\.md$
	Open=(nvim-qt %f >/dev/null 2>&1 &)

# plain text
type/English\ text
	Include=plaintext
type/i/^ASCII\ news\ text
	Include=plaintext
type/i/^ASCII\ text
	Include=plaintext
type/i/^UTF-8\ Unicode\ \(with\ BOM\)\ Pascal\ program\ text
	# get when oowrite saves to text format
	Include=plaintext
type/i/^POSIX\ shell\ script\ text\ executable
	Include=plaintext
type/i/^Non-ISO\ extended-ASCII\ text,\ with\ CRLF\ line\ terminators
	# found in Met-Art downloads
	Include=plaintext
type/i/^Non-ISO\ extended-ASCII\ text,\ with\ very\ long\ lines,\ with\ CRLF\ line\ terminators
	# found in Met-Art downloads
	Include=plaintext
type/i/^ICE\ authority\ data
	# found in Met-Art downloads
	Include=plaintext
type/i/^SemOne\ archive\ data
	# found in Met-Art downloads
	Include=plaintext
type/i/^Pascal\ source,\ ISO-8859\ text,\ with\ CRLF\ line\ terminators
	# found in asstr downloads
	Include=plaintext
type/i/^C++\ source,\ Non-ISO\ extended-ASCII\ text,\ with\ CRLF\ line\ terminators
	# found in asstr downloads
	Include=plaintext
type/i/^ISO-8859\ text,\ with\ very\ long\ lines,\ with\ CRLF\ line\ terminators
	# found in asstr downloads
	Include=plaintext
type/i/^UTF-8\ Unicode\ text
	Include=plaintext

include/plaintext
	Open=sensible-editor %f


### Databases ###

# gramps

## [*.grdb]
regex/i/\.grdb$
	Open=(gramps %f >/dev/null 2>&1 &)

# tellico

## note: compressed file with mime type 'application/zip'
##       so this entry must occur before that for zip

## [*.tc]
regex/i/\.tc$
	Open=(tellico %f >/dev/null 2>&1 &)


### Miscellaneous ###

# nsis

## [*.nsi]
regex/i/\.nsi$
	Open=makensis %f;echo;echo "Press ENTER to exit...";read y

## dn-build-repository resources file
## [*.dbnrep]
#regex/i/\.dbnrep$
	#Open=konsole --caption "Building Debian Repository" --icon /home/david/conf/system/icons/debian.xpm -e dn-build-repository -p %f &

### End of entries inserted by @pkg@ ###


