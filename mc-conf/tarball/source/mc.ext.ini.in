## Midnight Commander 4.0 extension file

# Source: generated by package dn-mc-conf (see 'man dn-mc-conf' for details)

# OVERRIDES

### Archives ###

[rar]
Regex=\.r(ar|[0-9][0-9])$
RegexIgnoreCase=true
Open=%cd %p/dn-urar://
View=%view{ascii} /usr/lib/mc/ext.d/archive.sh view rar


### Images ###

[Include/image]
Open=(imv-x11 -d -c 'open ./*' "%f" &>/dev/null &)
View=%view{ascii} /usr/lib/mc/ext.d/image.sh view ALL_FORMATS
Edit=(gimp %f &>/dev/null &)


### Sound files ###

#[mp3]
#Shell=.mp3
#ShellIgnoreCase=true
#Open=(run-mailcap audio/mpeg:%f >/dev/null 2>&1 &)
## mp3info2 action does not work as View action
## explanation for View action failure is not known
## mp3info2 action *does* work as an Edit action
#View=%view{ascii} mpg123 -vtn1 %f 2>&1 | sed -n '/^Title/,/^Comment/p;/^MPEG/,/^Audio/p'
#Edit=%view{ascii} mp3info2 %f

#[wma]
#Shell=.wma
#ShellIgnoreCase=true
#Open=(run-mailcap audio/x-ms-wma:%f >/dev/null 2>&1 &)
#View=%view{ascii} mplayer -quiet -slave -frames 0 -vo null -ao null -identify %f 2>/dev/null || file %f


### Play lists ###

# [copy existing playlist actions from later in file to here,
#  before the plain text actions, because playlist files are plain text]

[playlist]
Regex=\.(m3u|pls)$
RegexIgnoreCase=true
Open=/usr/lib/mc/ext.d/sound.sh open playlist


### Email ###

[eml]
# * neomutt_my-eml-viewer provided in mail dotfiles
# * put here, even though an addition, because it must go before
#   type=plain-text (because that is how 'file' commonly reads these files)
Shell=.eml
ShellIgnoreCase=true
Open=(neomutt_my-eml-viewer %f)
View=(sensible-editor %f >/dev/null 2>&1 &)


### Documents ###

[html]
Regex=\.html?$
RegexIgnoreCase=true
Open=(if test -n "" && test -n "$DISPLAY"; then ( file://%d/%p &) 1>&2; else qutebrowser %f || google-chrome %f || firefox %f || lynx -force_html %f || ${PAGER:-more} %f; fi) 2>/dev/null
View=%view{ascii} links -dump %f 2>/dev/null || w3m -dump %f 2>/dev/null || lynx -dump -force_html %f

[dvi]
# plain and gzipped
Regex=\.dvi(\.gz)?$
Include=output

[postscript-gzipped]
Regex=\.ps\.gz$
Include=output

[pdf-gzipped]
Regex=\.pdf\.gz$
Include=output

[pdf]
Shell=.pdf
Include=output

[Include/output]
Open=(okular %f >/dev/null 2>&1 &)


# ADDITIONS

### Archives ###

[mht]
Regex=\.mht(ml)?$
RegexIgnoreCase=true
Open=(firefox %f >/dev/null 2>&1 &)

### Sound files ###

[mpc]
# Musepack Compressed Audio
# - omission of mime-type in run-mailcap command causes it
#   to try and match the extension in the mime.types files
#   (see 'man mime.types' and 'man run-mailcap')
# - the mime.types file defines a mime-type
# - the mailcap file (see 'man mailcap') defines the
#   command to play the file with that extension
Shell=.mpc
ShellIgnoreCase=true
Open=(run-mailcap %f >/dev/null 2>&1 &)

[ac3]
Shell=.ac3
ShellIgnoreCase=true
Open=(run-mailcap audio/ac3:%f >/dev/null 2>&1 &)

#[m4a]
#Shell=.m4a
#ShellIgnoreCase=true
#Open=(run-mailcap audio/mp4:%f >/dev/null 2>&1 &)

#[flac]
#Shell=.flac
#ShellIgnoreCase=true
#Open=(run-mailcap audio/flac:%f >/dev/null 2>&1 &)
#View=%view{ascii} mplayer -quiet -slave -frames 0 -vo null -ao null -identify %f 2>/dev/null || file %f


### Video ###

[m2v]
Shell=.m2v
ShellIgnoreCase=true
Include=video

#[mp4]
#Shell=.mp4
#ShellIgnoreCase=true
#Open=(run-mailcap video/mp4:%f >/dev/null 2>&1 &)

[rm]
Shell=.rm
ShellIgnoreCase=true
Open=(run-mailcap application/vnd.rn-realmedia:%f >/dev/null 2>&1 &)


### Documents ###

## Microsoft Word Document
#[msdoc-by-shell]
#Shell=.docx
#ShellIgnoreCase=true
#Open=/usr/lib/mc/ext.d/doc.sh open msdoc
#View=%view{ascii} /usr/lib/mc/ext.d/doc.sh view msdoc

[planner]
Shell=.planner
ShellIgnoreCase=true
Open=(planner %f > /dev/null 2>&1 &)

[azw-by-type]
Type=^Mobipocket\ E-book
TypeIgnoreCase=true
Include=azwbook

[azw-by-extension]
Shell=.azw
ShellIgnoreCase=true
Include=azwbook

[Include/azwbook]
Open=(ebook-viewer %f >/dev/null 2>&1 &)
View=(sensible-editor %f >/dev/null 2>&1 &)

[epub-by-type]
Type=(EPUB\ ebook\ data|EPUB\ document)
TypeIgnoreCase=true
Include=ebook

[epub-by-extension]
Shell=.epub
ShellIgnoreCase=true
Include=ebook

[mobi]
Shell=.mobi
ShellIgnoreCase=true
Include=ebook

[Include/ebook]
Open=(ebook-viewer %f >/dev/null 2>&1 &)
View=(sensible-editor %f >/dev/null 2>&1 &)

# LibreOffice (only those extensions missed by default mechanism)

#[doc]
#Shell=.doc
#ShellIgnoreCase=true
#Include=libreoffice

#[rtf]
#Shell=.rtf
#ShellIgnoreCase=true
#Include=libreoffice

#[fodt]
#Shell=.fodt
#ShellIgnoreCase=true
#Include=libreoffice

#[xlsx]
#Shell=.xlsx
#ShellIgnoreCase=true
#Include=libreoffice

[xlsb]
Shell=.xlsb
ShellIgnoreCase=true
Include=libreoffice

[xlsm]
Shell=.xlsm
ShellIgnoreCase=true
Include=libreoffice

#[ppt]
#Shell=.ppt
#ShellIgnoreCase=true
#Include=libreoffice

#[pptx]
#Shell=.pptx
#ShellIgnoreCase=true
#Include=libreoffice

[Include/libreoffice]
Open=(libreoffice %f >/dev/null 2>&1 &)

# scribus

[sla]
Shell=.sla
ShellIgnoreCase=true
Include=scribus

[Include/scribus]
Open=(scribus %f >/dev/null 2>&1 &)

# markdown

[markdown]
Shell=.md
ShellIgnoreCase=true
Open=(nvim-qt %f >/dev/null 2>&1 &)

# plain text

[plain-text-english-text]
Type=English\ text
TypeIgnoreCase=false
Include=plaintext

[plain-text-ascii-news]
Type=^ASCII\ news\ text
TypeIgnoreCase=true
Include=plaintext

[plain-text-ascii-text]
Type=^ASCII\ text
TypeIgnoreCase=true
Include=plaintext

[plain-text-pascal-program]
# get when oowrite saves to text format
Type=^UTF-8\ Unicode\ \(with\ BOM\)\ Pascal\ program\ text
TypeIgnoreCase=true
Include=plaintext

[plain-text-script]
Type=^POSIX\ shell\ script\ text\ executable
TypeIgnoreCase=true
Include=plaintext

[plain-text-non-iso-standard]
# found in Met-Art downloads
Type=^Non-ISO\ extended-ASCII\ text,\ with\ CRLF\ line\ terminators
TypeIgnoreCase=true
Include=plaintext

[plain-text-non-iso-long]
# found in Met-Art downloads
Type=^Non-ISO\ extended-ASCII\ text,\ with\ very\ long\ lines,\ with\ CRLF\ line\ terminators
TypeIgnoreCase=true
Include=plaintext

[plain-text-ice]
# found in Met-Art downloads
Type=^ICE\ authority\ data
TypeIgnoreCase=true
Include=plaintext

[plain-text-semone]
# found in Met-Art downloads
Type=^SemOne\ archive\ data
TypeIgnoreCase=true
Include=plaintext

[plain-text-pascal-source]
# found in asstr downloads
Type=^Pascal\ source,\ ISO-8859\ text,\ with\ CRLF\ line\ terminators
TypeIgnoreCase=true
Include=plaintext

[plain-text-cpp-source]
# found in asstr downloads
Type=^C++\ source,\ Non-ISO\ extended-ASCII\ text,\ with\ CRLF\ line\ terminators
TypeIgnoreCase=true
Include=plaintext

[plain-text-iso-8859]
# found in asstr downloads
Type=^ISO-8859\ text,\ with\ very\ long\ lines,\ with\ CRLF\ line\ terminators
TypeIgnoreCase=true
Include=plaintext

[plain-text-unicode]
Type=^UTF-8\ Unicode\ text
TypeIgnoreCase=true
Include=plaintext

[Include/plaintext]
Open=sensible-editor %f


### Databases ###

# gramps

[grdb]
Shell=.grdb
ShellIgnoreCase=true
Open=(gramps %f >/dev/null 2>&1 &)

# tellico

[tc]
## is a compressed file with mime type 'application/zip'
## so this entry must occur before that for zip
Shell=.tc
ShellIgnoreCase=true
Open=(tellico %f >/dev/null 2>&1 &)


### Miscellaneous ###

# nsis

[nsi]
Shell=.nsi
ShellIgnoreCase=true
Open=makensis %f;echo;echo "Press ENTER to exit...";read y

### End of entries inserted by dn-mc-conf ###



