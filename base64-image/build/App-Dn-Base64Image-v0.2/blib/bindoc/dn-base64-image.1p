.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DN-BASE64-IMAGE 1p"
.TH DN-BASE64-IMAGE 1p 2024-06-23 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
dn\-base64\-image \- provide data uri for an image
.SH USAGE
.IX Header "USAGE"
dn\-base64\-image [ \fB\-m\fR \fImime_type\fR ] \fB\-f\fR \fIimage_file\fR
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Create html element 'img' for an image using data uri with base64 encoding.
Encoded data is printed to stdout.
.SH CONFIGURATION
.IX Header "CONFIGURATION"
This script requires no configuration files or environmental variables.
.SH "REQUIRED ARGUMENTS"
.IX Header "REQUIRED ARGUMENTS"
None.
.SH OPTIONS
.IX Header "OPTIONS"
.IP "\fB\-f\fR | \fB\-\-image_file\fR image_file" 4
.IX Item "-f | --image_file image_file"
Image to convert. Filepath (must exist).
.Sp
Required.
.IP "\fB\-m\fR | \fB\-\-mime_type\fR mime_type" 4
.IX Item "-m | --mime_type mime_type"
Override autodetected image mime type.
.Sp
Optional. Default: false.
.IP \fB\-h\fR 4
.IX Item "-h"
Display help and exit.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
The exit code is 0 for successful execution and 1 if the script does a
controlled exit following an error. If the script crashes unexpectedly
the error code is that given by the system.
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
.SS "Invalid file path: FILEPATH"
.IX Subsection "Invalid file path: FILEPATH"
Occurs when an invalid image file path has been provided.
.SS "Unable to determine image file mime type"
.IX Subsection "Unable to determine image file mime type"
Occurs when the module File::MimeInfo is unable to determine the mime type
of the image file.
.SS "Unable to encode image file"
.IX Subsection "Unable to encode image file"
Occurs when the module MIME::Base64 is unable to encode the raw content of
the image file as <base\ 64.
.SH INCOMPATIBILITIES
.IX Header "INCOMPATIBILITIES"
None reported.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH DEPENDENCIES
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
autodie, Carp, Const::Fast, File::MimeInfo, MIME::Base64, Moo, MooX::Options,
namespace::clean, strictures, version.
.SH AUTHOR
.IX Header "AUTHOR"
David Nebauer <david@nebauer.org>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2024 David Nebauer <david@nebauer.org>
.PP
This script is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
