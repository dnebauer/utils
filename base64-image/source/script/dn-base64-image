#!/usr/bin/perl

use Moo;
use strictures 2;
use 5.006;
use 5.038_001;
use version; our $VERSION = qv('0.2');
use namespace::clean;
use App::Dn::Base64Image;

App::Dn::Base64Image->new_with_options->run;

# POD    {{{1

__END__

=head1 NAME

dn-base64-image - provide data uri for an image

=head1 USAGE

dn-base64-image [ B<-m> I<mime_type> ] B<-f> I<image_file>

=head1 DESCRIPTION

Create html element 'img' for an image using data uri with base64 encoding.
Encoded data is printed to stdout.

=head1 CONFIGURATION

This script requires no configuration files or environmental variables.

=head1 REQUIRED ARGUMENTS

None.

=head1 OPTIONS

=over

=item B<-f> | B<--image_file> image_file

Image to convert. Filepath (must exist).

Required.

=item B<-m> | B<--mime_type> mime_type

Override autodetected image mime type.

Optional. Default: false.

=item B<-h>

Display help and exit.

=back

=head1 EXIT STATUS

The exit code is 0 for successful execution and 1 if the script does a
controlled exit following an error. If the script crashes unexpectedly
the error code is that given by the system.

=head1 DIAGNOSTICS

=head2 Invalid file path: FILEPATH

Occurs when an invalid image file path has been provided.

=head2 Unable to determine image file mime type

Occurs when the module L<File::MimeInfo> is unable to determine the mime type
of the image file.

=head2 Unable to encode image file

Occurs when the module L<MIME::Base64> is unable to encode the raw content of
the image file as S<<base 64>.

=head1 INCOMPATIBILITIES

None reported.

=head1 BUGS AND LIMITATIONS

Please report any bugs to the author.

=head1 DEPENDENCIES

=head2 Perl modules

autodie, Carp, Const::Fast, File::MimeInfo, MIME::Base64, Moo, MooX::Options,
namespace::clean, strictures, version.

=head1 AUTHOR

David Nebauer E<lt>david@nebauer.orgE<gt>

=head1 LICENSE AND COPYRIGHT

Copyright (c) 2024 David Nebauer E<lt>david@nebauer.orgE<gt>

This script is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

# vim: fdm=marker :
