.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "TW-SELECT-PLUGINS 1p"
.TH TW-SELECT-PLUGINS 1p 2024-07-22 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
tw\-select\-plugins \- interactive filter for selecting plugins
.SH USAGE
.IX Header "USAGE"
\&\fBtw-select-plugins\fR [\fB\-d\fR \fIpath\fR] [\fB\-f\fR \fIfont\fR] [\fB\-i\fR \fIint\fR]
.PP
\&\fBtw-select-plugins \-h\fR
.SH DESCRIPTION
.IX Header "DESCRIPTION"
In client-server TiddlyWiki <https://tiddlywiki.com/> plugins are referred to
by the subdirectory path to plugin files within a plugins directory. The
customary practice is to use two levels of subdirectory:
\&\fIPLUGIN_AUTHOR/PLUGIN_NAME\fR.
.PP
This script is an interactive filter that accepts a newline-separated list of
enabled plugins via standard input. The user is then presented with a list box
containing all plugins in the specified plugins directories (the method of
plugins directory selection is discussed in "Plugins directory selection"
below). The plugins provided via standard input are pre-selected. The user can
select additional plugins and deselect currently enabled plugins. When the user
presses the \f(CW\*(C`Set!\*(C'\fR button a newline-separated list of selected plugins is sent
to standard output.
.PP
If the user presses the \f(CW\*(C`Abort\*(C'\fR button the list of plugins received via
standard input is sent to standard output.
.SS "Plugins directory selection"
.IX Subsection "Plugins directory selection"
The script follows these steps to determine which plugins directories to use.
.RS 4
.IP "Supplied on command line" 4
.IX Item "Supplied on command line"
The script tries first to obtain plugins directories from command line options
(\f(CW\*(C`\-d\*(C'\fR or \f(CW\*(C`\-\-plugins_directory\*(C'\fR). If directories are provided via this method,
and at least one of them is valid, they are used.
.IP "Supplied by an environmental variable" 4
.IX Item "Supplied by an environmental variable"
If no plugins directories are provided on the command line, the script tries to
obtain them from the \f(CW$TIDDLYWIKI_PLUGIN_PATH\fR environmental variable. If at
least one valid directory is provided by this method, they are used.
.IP "Default directory" 4
.IX Item "Default directory"
If no plugins directories are provided via either of the previous methods, the
script attempts to use the default server plugins directory used by the debian
\&\f(CW\*(C`npm\*(C'\fR install, \fI/usr/local/lib/node_modules/tiddlywiki/plugins/\fR, if it is
valid.
.RE
.RS 4
.RE
.PP
In all the methods above, if an invalid directory is detected but the script
proceeds, the user is warned of the missing directories via a gui message
dialog.
.SS "Vim users"
.IX Subsection "Vim users"
This script is intended for use with vim <https://www.vim.org/> and vim clones
when editing a \fItiddlywiki.info\fR file. You can follow these steps to change
the list of selected plugins:
.IP \(bu 4
Perform a line-wise selection of the plugin list.
.IP \(bu 4
Press the colon key. This causes the command line to display the selection
marks '<,'> which indicate the following command will apply to the selected
text.
.IP \(bu 4
Type an exclamation point followed by the script name and any necessary
options. The command line will look something like:
.Sp
.Vb 1
\&    :\*(Aq<,\*(Aq>!tw\-select\-plugins \-f "Terminus,18"
.Ve
.IP \(bu 4
Press Enter.
.PP
A listbox widget will be displayed for the user to alter which plugins are
selected. If the "Set!" button is pressed, the selected text in vim is replaced
with a list of the newly selected plugins.
.PP
If an error occurs the selected text in vim may be replaced with the error
output. If this occurs the change can be easily reversed with the undo command,
invoked in Normal mode with the \f(CW\*(C`u\*(C'\fR key.
.SS "When no standard input is provided"
.IX Subsection "When no standard input is provided"
If no standard input is provided when this script is invoked, it waits
indefinitely for standard input. Pressing \f(CW\*(C`Ctrl\-d\*(C'\fR signals to the script that
standard input is complete and it will continue execution.
.SH CONFIGURATION
.IX Header "CONFIGURATION"
.SS "Standard input"
.IX Subsection "Standard input"
This script is an interactive filter that accepts a newline-separated list of
enabled plugins via standard input. See "DESCRIPTION" for more details.
.SS "Configuration files"
.IX Subsection "Configuration files"
None used.
.SS "Environment variables"
.IX Subsection "Environment variables"
\fITIDDLYWIKI_PLUGIN_PATH\fR
.IX Subsection "TIDDLYWIKI_PLUGIN_PATH"
.PP
If no plugins directories are provided on the command line, the script tries to
obtain them from the \f(CW$TIDDLYWIKI_PLUGIN_PATH\fR environmental variable. If at
least one valid directory is provided by this method, they are used.
.SH "REQUIRED ARGUMENTS"
.IX Header "REQUIRED ARGUMENTS"
None.
.SH OPTIONS
.IX Header "OPTIONS"
.SS "\-d | plugins_directory PATH"
.IX Subsection "-d | plugins_directory PATH"
Server plugins directory.
.PP
If specifying multiple directories, use a separate \f(CW\*(C`\-d\*(C'\fR option for each.
.PP
If no directories are provided by the user with this option, the script will
attempt to use any directories specified with the environmental variable
\&\f(CW$TIDDLYWIKI_PLUGIN_PATH\fR. If no directories are provided by command line
option or environmental variable, the script will use the debian default plugin
location of \fI/usr/local/lib/node_modules/tiddlywiki/plugins/\fR if it exists.
.PP
Path. Optional. Default: [see discussion above].
.SS "\-f | \-\-font FONT"
.IX Subsection "-f | --font FONT"
Font name and size. Format as a single string like "font,size" with a comma
separating the elements and no extra spaces.
.PP
Note: the script does not check the validity of this option value. A
non-existent font name is ignored, while a non-numeric size causes a fatal
error.
.PP
String. Optional. Default: "LucidaSans,18".
.SS "\-i | \-\-indent INDENT"
.IX Subsection "-i | --indent INDENT"
Size of indent used in output.
.PP
Integer. Optional. Default: 8. Negative values are silently ignored.
.SS "\-h | \-\-help"
.IX Subsection "-h | --help"
Display help and exit. Flag. Optional. Default: false.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
The exit code is 0 for successful execution and 1 if the script does a
controlled exit following an error. If the script crashes unexpectedly
the error code is that given by the system.
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
This script emits no custom errors or warnings, though dependent modules may do
so.
.SH INCOMPATIBILITIES
.IX Header "INCOMPATIBILITIES"
There are no known incompatibilities.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH DEPENDENCIES
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
App::TW::Select::Plugins, Moo, namespace::clean, strictures, version.
.SH AUTHOR
.IX Header "AUTHOR"
David Nebauer <david@nebauer.org>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2024 David Nebauer <david@nebauer.org>
.PP
This script is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
