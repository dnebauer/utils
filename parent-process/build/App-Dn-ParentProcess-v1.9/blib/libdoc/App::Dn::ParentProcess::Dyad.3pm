.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Dn::ParentProcess::Dyad 3pm"
.TH App::Dn::ParentProcess::Dyad 3pm 2024-06-15 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
App::Dn::ParentProcess::Dyad \- model a parent\-child process pair
.SH VERSION
.IX Header "VERSION"
This documentation is for App::Dn::ParentProcess::Dyad version 1.9.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use App::Dn::ParentProcess::Dyad;
\&
\&    my $pair = App::Dn::ParentProcess::Dyad\->new(
\&      parent  => $parent,
\&      child   => $child,
\&      command => $command,
\&    );
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
A helper module for module App::Dn::ParentProcess.
.PP
This module models a parent-child process id pair.
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
.SS Properties
.IX Subsection "Properties"
\fIparent\fR
.IX Subsection "parent"
.PP
Parent process id. Scalar integer. Required.
.PP
\fIchild\fR
.IX Subsection "child"
.PP
Child process id. Scalar integer. Required.
.PP
\fIcommand\fR
.IX Subsection "command"
.PP
Child process command. Scalar string. Required.
.SS "Configuration files"
.IX Subsection "Configuration files"
None used.
.SS "Environment variables"
.IX Subsection "Environment variables"
None used.
.SH SUBROUTINES/METHODS
.IX Header "SUBROUTINES/METHODS"
None.
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
This module does not emit any custom warning or error messages.
.SH INCOMPATIBILITIES
.IX Header "INCOMPATIBILITIES"
None known.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH DEPENDENCIES
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
Const::Fast, Moo, namespace::clean, strictures, Types::Standard, version.
.SH AUTHOR
.IX Header "AUTHOR"
David Nebauer (david at nebauer dot org)
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2024 David Nebauer (david at nebauer dot org)
.PP
This script is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
