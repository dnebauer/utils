#!/usr/bin/perl 

use Moo;    #    {{{1
use strictures 2;
use 5.014_002;
use namespace::clean;
use version; our $VERSION = qv('0.1');    # }}}1

{

    package Dn::Internal;

    use Moo;
    use strictures 2;
    use namespace::clean;
    use Dn::Common;
    use Function::Parameters;
    use Getopt::Long::Descriptive qw(describe_options);
    use Readonly;
    use Time::CTime qw(strftime);
    use Types::Standard qw(Str);

    my $cp = Dn::Common->new();
    Readonly my $icon => q{@icons_dir@/} . $cp->scriptname() . q{.xpm};
    # }}}1

    # Attributes

    # _time, _date    {{{1
    has [ '_time', '_date' ] => (
        is  => 'rw',
        isa => Types::Standard::Str,
    );    # }}}1

    # Methods

    # main()    {{{1
    #
    # does:   get and display time and date
    # params: nil
    # prints: nil
    # return: nil
    method main () {
        $self->_help();
        $self->_get_date_and_time();
        $self->_display_message( 'Current Time', $self->_time );
        $self->_display_message( 'Current Date', $self->_date );
    }

    # _help    {{{1
    #
    # does:   displays help if requested
    #
    # params: nil
    # prints: help message if requested
    # return: n/a, exits after displaying help
    method _help () {
        my ($opt, $usage) = Getopt::Long::Descriptive::describe_options(
            'dn-show-time %o',
            [ 'help|h', 'print usage message and exit' ],
        );
        print($usage->text), exit if $opt->help;
    }

    # _get_date_and_time()    {{{1
    #
    # does:   gets current time and date
    # params: nil
    # prints: nil
    # return: nil
    # note:   sets attributes
    method _get_date_and_time () {

        # time: 'HH:MM am'
        $self->_time( Time::CTime::strftime( "%I:%M", localtime(time) ) . q{ }
                . lc( Time::CTime::strftime( "%p", localtime(time) ) ) );

        # date: 'Thursday, 8 January 2000'
        $self->_date(
            Time::CTime::strftime( "%A, %d %B %Y", localtime(time) ) );
    }

    # _display_message(@messages)    {{{1
    #
    #  does:   display message in popup
    #  params: $title   - title [required]
    #          $message - message [required]
    #  prints: messages
    #  return: nil
    method _display_message ($title, $message) {
        if ( not $title ) { return; }
        if ( not $message ) { return; }
        $cp->notify_sys( $message, title => $title, icon => $icon );
    }    # }}}1

    1;
}

my $p = Dn::Internal->new->main;

# POD    {{{1

__END__

=head1 NAME

dn-show-time - display current time and date in system notification

=head1 USAGE

B<dn-show-time>

B<dn-show-time> I<-h>

=head1 OPTIONS

=over

=item B<-h>

Display help and exit.

=back

=head1 DESCRIPTION

Display time and date in notification popup. Uses time format 'HH:MM am' and
date format 'Thursday, 8 June 2000'.

=head1 DEPENDENCIES

Dn::Common, Function::Parameters, Getopt::Long::Descriptive, Moo,
namespace::clean, Readonly, strictures, Time::CTime, Types::Standard, version.

=head1 BUGS AND LIMITATIONS

Please report any bugs to the author.

=head1 AUTHOR

David Nebauer E<lt>davidnebauer@hotkey.net.auE<gt>

=head1 LICENSE AND COPYRIGHT

Copyright (c) 2015 David Nebauer E<lt>davidnebauer@hotkey.net.auE<gt>

This script is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

# vim: fdm=marker
