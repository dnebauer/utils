NAME

    App::Dn::Mp3Rename - rename mp3 files according to user formatting
    template

VERSION

    This documentation refers to dn-mp3file-rename version 0.5.

SYNOPSIS

        my $mp3rename = App::Dn::Mp3Rename->new(format => $format);
        $mp3rename->run;

DESCRIPTION

    Renames all audio mp3 files in the current directory. The names given
    to the files are determined by a format template provided by the user.
    This template actually determines the base name of the new file; all
    files automatically retain the .mp3 extension.

 Placeholders in the format template

    The format template can contain any of the following placeholders:

      * %t = track title

      * %a = track artist

      * %l = album name

      * %y = track year

      * %n = track number

      * %d = disk number.

    All placeholder values are 'simplified':

      * converted to lower case

      * spaces changed to dashes

      * multiple dashes collapsed to single dashes

      * leading and trailing dashes removed

      * punctuations marks such as commas, semicolons, colons, apostrophes,
      question marks and exclamation points removed

      * words like 'a', 'an' and 'the' removed from the beginning.

 Numeric tags

    Both "number" and "disk" are positive non-zero integers. Their raw tag
    values may be a simple integer indicating track number, e.g., '6', or
    two integers indicating track number and total number of tracks, e.g.,
    '6/12'. A simple algorithm is used to extract the track number: the
    initial sequence of digits in the tag is extracted.

    It is a fatal error if a valid track number cannot be extracted from a
    file's tags. In contrast, if a valid disk number cannot be extracted it
    defaults to '1'.

 User confirmation

    The proposed renaming operation is shown to the user, who must give
    confirmation before files are renamed.

CONFIGURATION AND ENVIRONMENT

 Properties

  format

    Formatting template used to create file base names. Is a string that
    can contain the following placeholders: %t (title), %a (artist), %l
    (album), %y (year), %n (track number), and %d (disk number). The
    template needs to result in unique file base names for each track file.
    The .mp3 extension does not need to be included in the format template.

    Required.

 Configuration files

    None used.

 Environment variables

    None used.

SUBROUTINES/METHODS

 run()

    The only public method. Performs file renaming as described in
    "DESCRIPTION".

DIAGNOSTICS

 No valid track number in file 'FILE'

    The audio mp3 track number tag is empty or does not contain a valid
    track number. A valid track number is either:

      * a single positive non-zero integer, e.g., '6', or

      * two positive non-zero integers separated by a slash, e.g., '6/10'.

 Format is an empty string

    An empty format string was provided.

 No *.mp3 files found

    The current directory contains no files with an .mp3 extension.

 These files both generate the new file name FILE: FILE, FILE

    The format template, when applied to two audio mp3 files, generates the
    same new file name. This error can be artificially generated by using a
    format template (-f) with no placeholders.

DEPENDENCIES

 Perl modules

    autodie, Const::Fast, Cwd, English, Log::Log4perl, Moo,
    MooX::HandlesVia, Term::ProgressBar::Simple, Types::Standard,
    namespace::clean, strictures, version.

INCOMPATIBILITIES

    There are no known incompatibilities.

BUGS AND LIMITATIONS

    Please report any bugs to the author.

AUTHOR

    David Nebauer (david at nebauer dot org)

LICENSE AND COPYRIGHT

    Copyright (c) 2024 David Nebauer (david at nebauer dot org)

    This script is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

