.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DN-BUILD-DEB 1"
.TH DN-BUILD-DEB 1 "2021-10-24" "perl v5.32.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dn\-build\-deb \- generate deb package for project
.SH "USAGE"
.IX Header "USAGE"
\&\fBdn-build-deb\fR \fB\-r\fR \fIroot\fR \fB\-n\fR \fIname\fR \fB\-e\fR \fIemail\fR \fB\-p\fR \fIpkg\fR
[\fB\-t\fR] [\fB\-d\fR]
.PP
\&\fBdn-build-deb \-h\fR
.SH "REQUIRED ARGUMENTS"
.IX Header "REQUIRED ARGUMENTS"
Nil.
.SH "REQUIRED OPTIONS"
.IX Header "REQUIRED OPTIONS"
.IP "\fB\-r\fR|\fB\-\-root_dir\fR \fIval\fR" 4
.IX Item "-r|--root_dir val"
The root directory of the source project.
.Sp
Scalar string. Required. No default.
.IP "\fB\-n\fR|\fB\-\-maint_name\fR \fIval\fR" 4
.IX Item "-n|--maint_name val"
Name of the package maintainer.
.Sp
Scalar string. Required. No default.
.IP "\fB\-e\fR|\fB\-\-maint_email\fR \fIval\fR" 4
.IX Item "-e|--maint_email val"
Email address of the package maintainer.
.Sp
Scalar string. Required. No default.
.IP "\fB\-p\fR|\fB\-\-pkg_name\fR \fIval\fR" 4
.IX Item "-p|--pkg_name val"
Package name.
.Sp
Not used by this script but made available to sourced customisation files (see
\&\*(L"Customising the build process\*(R").
.Sp
Scalar string. Required. No default.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-t\fR|\fB\-\-template\fR" 4
.IX Item "-t|--template"
Create empty project template consisting of the required directories (see
\&\*(L"Source Project\*(R").
.Sp
Also creates empty customisation files and a wrapper for this script.
.Sp
Note the root directory must be empty if a project template is to be created in
it.
.Sp
Boolean. Optional. Default: false.
.IP "\fB\-d\fR|\fB\-\-dist_build\fR" 4
.IX Item "-d|--dist_build"
Skip building of the targzipped project distribution and copying it to the
\&\fIdebianise/source\fR directory (see \*(L"Build Process\*(R"). Instead assume there is
a single such file in that directory.
.Sp
This option is designed for use when building a previous version of a project
from an archived distribution targzip file. If reverting to an earlier version
of the project, make sure debian control files such as
\&\fIdebian\-files/changelog\fR are consistent.
.Sp
Boolean. Optional. Default: false.
.IP "\fB\-h\fR" 4
.IX Item "-h"
Display help and exit.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "Source Project"
.IX Subsection "Source Project"
This script is intended to work with standard autotools-compliant projects. The following directory structure is required:
.PP
.Vb 10
\&    <root>
\&     | 
\&     |\-\- debianise
\&     |   |
\&     |   |\-\- debian\-files
\&     |   |
\&     |   |\-\- scripts
\&     |   |
\&     |   \`\-\- source
\&     | 
\&     \`\-\- tarball
\&         |
\&         |\-\- autotools
\&         |
\&         |\-\- build
\&         |
\&         |\-\- archive
\&         |
\&         \`\-\- source
.Ve
.IP "debianise" 4
.IX Item "debianise"
The debian build files.
.IP "debian" 4
.IX Item "debian"
Debian control files to be copied in to the debian project file tree when it is
created. Some common files copied include \fIchangelog\fR, \fIcontrol\fR,
\&\fIcopyright\fR and \fIrules\fR.
.IP "scripts" 4
.IX Item "scripts"
Any scripts required by the build process.
.Sp
Traditionally contains a script called \fIbuild-deb\fR which invokes this
utility with the appropriate arguments.
.Sp
Can also contain either or both of two customisation files that this script
will look for during the build process (see \*(L"Customising the build process\*(R").
.IP "source" 4
.IX Item "source"
The source project is copied here, suitably altered and then the debian package
is built. The final debian package will be created in this directory.
.IP "tarball" 4
.IX Item "tarball"
The source project files.
.IP "autotools" 4
.IX Item "autotools"
Files required by autotools.
.Sp
These files are copied or symlinked to the \fIbuild\fR directory.
.Sp
Some common autotools files include \fIChangeLog\fR, \fIMakefile.am\fR and
\&\fIconfigure.ac\fR.
.IP "build" 4
.IX Item "build"
Where the distribution tarball is built.
.Sp
This directory is emptied at the start of the debian build process. Autotools
files and source files are copied or symlinked from their respective
directories. Then the autotools are used to build the tarball.
.IP "archive" 4
.IX Item "archive"
Each time a distribution tarball is built a copy is stored in this directory.
The idea is to keep an archive of all versions of the project.
.IP "source" 4
.IX Item "source"
Here the project source files are kept.
.SS "Build Process"
.IX Subsection "Build Process"
\fIDefault build process\fR
.IX Subsection "Default build process"
.PP
In the default build process the following steps are followed:
.IP "\(bu" 4
Build a targzipped project distribution in the \fItarball/build\fR directory with
the commands \f(CW\*(C`autoreconf\*(C'\fR, \f(CW\*(C`./configure\*(C'\fR, and \f(CW\*(C`make dist\*(C'\fR.
.IP "\(bu" 4
Copy the newly-created tarball to the \fIdebianise/source\fR directory and extract
it in place.
.IP "\(bu" 4
Perform initial initial debianisation with the command \f(CW\*(C`dh_make \-\-single
\&\-\-email <email> \-\-file ../<targzip>\*(C'\fR.
.Sp
where \f(CW\*(C`<email>\*(C'\fR is the email address provided as an argument to this
script and \f(CW\*(C`<targzip>\*(C'\fR is the project distribution file.
.IP "\(bu" 4
The default debian control files in the \fIdebian\fR subdirectory are deleted and
any customised debian control files in the \fIdebianise/debian\-files\fR are copied
into the \fIdebian\fR subdirectory.
.IP "\(bu" 4
The final package is built with the command \fIdpkg-buildpackage \-rfakeroot \-us
\&\-uc\fR.
.PP
\fICustomising the build process\fR
.IX Subsection "Customising the build process"
.PP
The default build process provides no opportunities for performing
project-specific actions on the initial project source or debian package source
aside from controlling what control files are present in a project's
\&\fIdebianise/debian\-files\fR directory.
.PP
To enable this sort of customisation this script looks in the
\&\fIdebianise/scripts\fR directory for the files \fItar-dir-prepare\fR and
\&\fIdeb-dir-prepare\fR:
.IP "\(bu" 4
\&\fItar-dir-prepare\fR: if this script is found and executable it will be executed
just before the \f(CW\*(C`autoreconf\*(C'\fR command is executed. The script is executed in
the \fItarball/build\fR directory.
.IP "\(bu" 4
\&\fIdeb-dir-prepare\fR: if this script is found and executable it will be executed
immediately after any customised debian control files are copied into the
package source. The script is executed in the \fIdebianise/source/<archive>\fR
directory, where \fI<archive>\fR is the top level directory of the extracted
tarball source distribution. The default version of this script performs the
following replacement on all debian control files: \fI\f(CI@pkg_name\fI@\fR is replaced by
the package name (this is analagous to using \fIconfigure.ac\fR to perform
substitutions on all source files).
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
There is no configuration of this script.
.PP
There are ways to customise the build process for a given project. See \*(L"Customising the build process\*(R" for further details.
.SH "INCOMPATIBILITIES"
.IX Header "INCOMPATIBILITIES"
There are no known incompatibilities.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
Report bugs to the project maintainer.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
If the script exits because a shell command failed, the exit status is that reported by \s-1POSIX::WTERMSIG\s0 or, if that is not available, 1.
.PP
If the script exits because of a \f(CW\*(C`croak\*(C'\fR, \f(CW\*(C`confess\*(C'\fR or \f(CW\*(C`die\*(C'\fR command, the
exist status is that provided by the default command.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
Moo, strictures, namespace::clean, autodie, Archive::Tar, Carp, Const::Fast,
Dn::Role::HasPath, Dn::Role::HasUserInteraction, Dpkg::Version,
Email::Date::Format, Email::Valid, English, Feature::Compat::Try,
File::Basename, File::chdir, File::Copy::Recursive, File::Find::Rule,
File::Spec, File::Path, FindBin, Function::Parameters, MooX::HandlesVia,
MooX::Options, Path::Tiny, Scalar::Util, Term::Clui, Term::ReadKey,
Types::Standard, version.
.SS "Executables"
.IX Subsection "Executables"
autoreconf, dh_make, dpkg, dpkg-buildpackage, make, su, sudo.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH "AUTHOR"
.IX Header "AUTHOR"
David Nebauer (david at nebauer dot org)
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2021 David Nebauer (david at nebauer dot org)
.PP
This script is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
