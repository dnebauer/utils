.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PANDER 1"
.TH PANDER 1 "2022-07-09" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
pander \- pandoc wrapper
.SH "USAGE"
.IX Header "USAGE"
\&\fBpander\fR \fB\-\-to=\fR\fIformat\fR \fB\-\-output=\fR\fIfile\fR \fIinput\fR [\fB\-\-\-quiet\fR]
.PP
\&\fBpander \-\-\-list\-styles\fR
.PP
\&\fBpander \-v\fR
.PP
\&\fBpander \-h\fR
.SH "REQUIRED ARGUMENTS"
.IX Header "REQUIRED ARGUMENTS"
.IP "\fB\-\-to=\fR\fIformat\fR" 4
.IX Item "--to=format"
Pandoc output format. Scalar string. Required.
.IP "\fB\-\-output=\fR\fIfile\fR" 4
.IX Item "--output=file"
Pandoc output filename. Scalar string. Required.
.IP "\fIinput\fR" 4
.IX Item "input"
Pandoc input markdown filename. Scalar string. Required.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h\fR  \fB\-\-help\fR  \fB\-\-\-help\fR  \fB\-\-\-h\fR" 4
.IX Item "-h --help ---help ---h"
Display help and exit.
.IP "\fB\-v\fR  \fB\-\-version\fR  \fB\-\-\-version\fR  \fB\-\-\-v\fR" 4
.IX Item "-v --version ---version ---v"
Display version and exit.
.IP "\fB\-\-\-list\-keywords\fR" 4
.IX Item "---list-keywords"
List each style keyword with description, and exit.
.IP "\fB\-\-\-quiet\fR" 4
.IX Item "---quiet"
Only print error and warning messages.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "Function"
.IX Subsection "Function"
Pander is a replacement for msprev/panzer <https://github.com/msprev/panzer>.
Like that project, pander keeps the concept of style keywords added to the
document's metadata, and these keywords have associated pandoc metadata
settings and pandoc command-line options. Like panzer, pander constructs a
pandoc command using the style keywords and options passed to it on the command
line, executes the pandoc command, and carries out necessary post-processing.
.PP
In panzer the style behaviour of keywords was defined in a configuration file.
In pander, the behaviour of style keywords is defined in the pander script
itself. In fact, it is defined in four style keyword data tables. To ensure
these tables are kept properly synchronised, a utility script called
\&\fIkeyword-table\fR is provided as part of pander. This utility script contains a
master keyword data table containing the complete definitions of all style
keywords. The script can output constructors for all four of the style keyword
data tables in the pander script. See the manpage for \fIkeyword-table\fR for
details on how to define the style keywords in that script.
.SS "Operation"
.IX Subsection "Operation"
Pander executes the following steps:
.IP "\(bu" 4
Extract style keywords by running pandoc on the input file. This relies on the
existence of a \fI<data_dir>/templates/metajson.tpl>\fR file having
as its sole content the line \f(CW\*(C`$meta\-json$\*(C'\fR.
.IP "\(bu" 4
Assemble metadata settings associated with the style keywords and write them to
a temporary json file.
.IP "\(bu" 4
Assemble pandoc command line options associated with the style keywords.
.IP "\(bu" 4
Add to the pandoc command a \f(CW\*(C`\-\-metadata\-file\*(C'\fR option to load the temporary
json metadata file generated earlier.
.IP "\(bu" 4
Add to the pandoc command all options passed to pander.
.IP "\(bu" 4
Execute the pandoc command.
.IP "\(bu" 4
Perform any post-execution tasks associated with the style keywords.
.PP
Note in the sequence above that options provided to pander on the command line
are added after options defined by style keywords. Because in pandoc later
options in the pandoc command override earlier ones, options provided to pander
on the command line will override options defined by style keywords.
.SS "Shortcuts (potential limitations)"
.IX Subsection "Shortcuts (potential limitations)"
Pander takes some shortcuts because it is intended to be run in a specific
environment: called by vim's vim-pandoc
plugin <https://github.com/vim-pandoc/vim-pandoc>. That plugin ensures the
parameters passed to pander include the \f(CW\*(C`\-\-output\*(C'\fR and \f(CW\*(C`\-\-to\*(C'\fR options, in the
format \f(CW\*(C`\-\-name=value\*(C'\fR, and the markdown input file is the last argument.
Pander will fail if those conditions are not met.
.SS "Data directory"
.IX Subsection "Data directory"
Unlike panzer, pander does not maintain its own data directory for pandoc to
use. Pandoc is left to determine its own data directory.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
lua (v5.3 or greater)
.PP
pandoc (v2.12 or greater)
.PP
pandoc templates:
.IP "\(bu" 4
\&\fImetajson.tpl\fR (available from github repository dnebauer/dotfiles\-pandoc)
.IP "\(bu" 4
\&\fIUoE\-letter.latex\fR (available from github repository dnebauer/dotfiles\-pandoc)
.IP "\(bu" 4
\&\fItufte\-jez.latex\fR (available from github repository dnebauer/dotfiles\-pandoc)
.PP
pandoc filters:
.IP "\(bu" 4
\&\fIheading2bold.py\fR (available from github repository dnebauer/dotfiles\-pandoc)
.IP "\(bu" 4
\&\fIinclude\-code\-files.lua\fR (available from github repository
dnebauer/dotfiles\-pandoc)
.IP "\(bu" 4
\&\fIinclude\-files.lua\fR (available from github repository
dnebauer/dotfiles\-pandoc)
.IP "\(bu" 4
\&\fIpagebreak.lua\fR (available from github repository dnebauer/dotfiles\-pandoc)
.IP "\(bu" 4
\&\fIpaginatesects.py\fR (available from github repository dnebauer/dotfiles\-pandoc)
.IP "\(bu" 4
\&\fIpandoc-eqnos\fR (available from github repository tomduck/pandoc\-eqnos)
.IP "\(bu" 4
\&\fIpandoc-fignos\fR (available from github repository tomduck/pandoc\-fignos)
.IP "\(bu" 4
\&\fIpandoc-secnos\fR (available from github repository tomduck/pandoc\-secnos)
.IP "\(bu" 4
\&\fIpandoc-tablenos\fR (available from github repository tomduck/pandoc\-tablenos)
.PP
latex packages:
.IP "\(bu" 4
extsizes
.IP "\(bu" 4
fontspec
.IP "\(bu" 4
microtype
.IP "\(bu" 4
placeins
.IP "\(bu" 4
ucharclasses
.IP "\(bu" 4
xcolor
.PP
latex fonts:
.IP "\(bu" 4
IPAexMincho
.IP "\(bu" 4
Inconsolata Nerd Font Mono
.IP "\(bu" 4
Junicode Two Beta
.IP "\(bu" 4
Linux Biolinum O
.IP "\(bu" 4
Linux Libertine O
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH "AUTHOR"
.IX Header "AUTHOR"
David Nebauer (david at nebauer dot org)
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2021 David Nebauer (david at nebauer dot org)
.PP
This file is part of Pander.
.PP
Pander is free software: you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
.PP
Pander is distributed in the hope that it will be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE.\s0  See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with Pander.  If not, see <https://www.gnu.org/licenses/>
