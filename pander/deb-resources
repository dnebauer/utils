# dn-qk-deb resources file
# [generated by dn-qk-deb on 2021-08-03 at 20:52:36]
# ------------------------------------------------------------
# Each line consists of key-value pairs
# separated by whitespace. If any key or value contains
# whitespace it must be enclosed by double quotation marks.
# Empty lines and comment lines (beginning with hashes)
# are ignored.
# Any unrecognised key will generate a fatal error
# Any key without a value will generate a fatal error
# Some names can be used only once while others can
# be used multiple times.
# ------------------------------------------------------------
 
# Package name
# Name of the package to be generated.
# Must not contain whitespace.
# Required. One only.
package-name pander
 
# Package version
# Version number for package.
# Required. One only.
version 1.3
 
# Script and binary files
# Executable files to be packaged.
# Can be standard ('bin-file') or superuser-only ('sbin-file').
# Default value of 'bin-file' in built deb package: /usr/bin
# Default value of 'sbin-file' in built deb package: /usr/sbin
# Required (unless a library package). Multiple allowed
bin-file pander
#sbin-file 
 
# Manpages
# Man pages to package.
# Default location in built deb package: /usr/share/man/man1
# Required (unless a library package). Multiple allowed.
man-file pander.1
 
# Data files
# Data files to package.
# Default location in built deb package: /usr/share/\$(PACKAGE).
# Optional. Multiple allowed.
data-file keyword-table
data-file keyword-table.1
 
# Icon file
# Icon file to package.
# Must be xpm format no larger than 32x32.
# Useful command is: 'convert icon.png -geometry 32x32 icon.xpm'.
# Default location in built deb package: /usr/share/icons.
# Note icons are not put into an application subdirectory
# -- be careful of filename clashes.
# Optional. Multiple allowed.
#icon-file 
 
# Desktop file
# Desktop file to package.
# Must conform to freedesktop.org Desktop Entry Specification
# (see http://standards.freedesktop.org/desktop-entry-spec/)
# Default location in built deb package: /usr/share/applications.
# Note desktop files are not put into an application subdirectory
# -- be careful of filename clashes.
# Optional. Multiple allowed.
#desktop-file 
 
# Configuration files
# Configuration files to package.
# Default location in built deb package: /etc/\$(PACKAGE).
# Optional. Multiple allowed.
#conf-file 
 
# Executable library files
# Executable programs run by other programs.
# Default value in built deb package: /usr/libexec/\$(PACKAGE).
# Optional. Multiple allowed.
#libexec-file 
 
# Library data files
# Data files used by other programs.
# Default value in built deb package: /usr/lib/\$(PACKAGE).
# Optional. Multiple allowed.
#libdata-file 
 
# Debconf file
# Debian build system debconf file
# In final package is named 'PACKAGE.config'
# Optional. One only
#debconf-file 
 
# Templates file
# Debian build system templates file
# In final package is named 'PACKAGE.templates'
# Optional. One only
#templates-file 
 
# Pre-install file
# Debian build system pre-install file
# In final package is named 'PACKAGE.preinst'
# Optional. One only
#preinstall-file 
 
# Post-install file
# Debian build system post-install file
# In final package is named 'PACKAGE.postint'
# Optional. One only
#postinstall-file 
 
# Pre-remove file
# Debian build system pre-remove file
# In final package is named 'PACKAGE.prerm'
# Optional. One only
#preremove-file 
 
# Post-remove file
# Debian build system post-remove file
# In final package is named 'PACKAGE.postrm'
# Optional. One only
#postremove-file 
 
# Bash completion file
# Debian build system bash completion file
# In final package is named 'PACKAGE.bash-completion'
# Optional. One only
#bash-completion-file 
 
# Install file
# Debian build system install file
# In final package is named 'PACKAGE.install'
# Can be used in conjunction with 'extra' key
# Optional. One only
#install-file 
 
# Extra files and directories
# Extra distribution files and directories
# Copied recursively into root of distribution
# Not added to deb package unless in combination
# with an install file (see 'install-file' key)
# Optional. Multiple allowed
#extra-path 
 
# Control summary
# One line summary of script for inclusion in the
# package 'control' file.
# This, in turn, is displayed by many package managers.
# Must be no longer than 60 characters.
# Required. One only.
control-summary pandoc wrapper script
 
# Control description
# Description of script. This is a longer description
# than the one line summary and can stretch over
# multiple lines. Each line can be no longer than
# 60 characters. Paragraphs can be separated by a line
# consisting of a single period ('.'). This description
# will be included in the package 'control' file. This,
# in turn, is displayed by many package managers.
# Required. Multiple allowed.
control-description A replacement for Mark Sprevak's panzer. It keeps the
control-description concept of style keywords added to the document's metadata.
control-description These keywords have associated pandoc metadata settings and
control-description pandoc command-line options. Pander writes the metadata
control-description settings to a temporary file. Pander then constructs a
control-description pandoc command with: the command-line options derived from
control-description the style keywords, a --metadata-file option that loads the
control-description metadata file built by pander, and any command-line options
control-description passed to pander.
control-description .
control-description Note that, unlike panzer, pander does not maintain its own
control-description data directory for pandoc to use.
control-description .
control-description The definition of style keywords is embedded in the pander
control-description script, meaning there is no configuration file and the
control-description script must be modified to alter them. An auxiliary script,
control-description 'keyword-table', is provided; it keeps a single master
control-description keyword table and can be used to generate the subsidiary
control-description keyword tables in the pander script.
 
# Dependency
# The name of a single package this package depends on.
# Can include minimum version.
# Optional. Multiple allowed.
 
# pandoc
depends-on pandoc (>= 2.14.1-1)
 
# ebook-convert
depends-on calibre (>= 5.12.0+dfsg-1)
 
# Copyright year
# Year of copyright
# Required. One only.
year 2021
 
# Email
# Email address of package maintainer
# Required. One only.
email david@nebauer.org
 
# Author
# Author of script
# Required. Multiple allowed.
author David Nebauer
