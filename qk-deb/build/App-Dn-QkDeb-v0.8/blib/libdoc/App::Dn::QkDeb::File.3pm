.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Dn::QkDeb::File 3pm"
.TH App::Dn::QkDeb::File 3pm 2024-06-22 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
App::Dn::QkDeb::File \- supply provided and true file names
.SH VERSION
.IX Header "VERSION"
This is documentation for App::Dn::QkDeb::File version 0.8.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 5
\&    has \*(Aq_distribution_filepath\*(Aq => (
\&        is     => \*(Aqrw\*(Aq,
\&        isa    => Types::Standard::InstanceOf [\*(AqApp::Dn::QkDeb::File\*(Aq],
\&        coerce => $TRUE,
\&    );
\&
\&    # later
\&
\&    my $file  = \*(AqMy\-Distro\-v1.0.tar.gz\*(Aq
\&    my $qkdeb = App::Dn::QkDeb::File\->new( file => $file );
\&    $self\->_distribution_filepath($qkdeb);
\&
\&    # later
\&
\&    my $distro_name = $self\->_distribution_filepath\->name;
\&    my $distro_path = $self\->_distribution_filepath\->real;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This package was introduced to handle file names in order to solve a problem:
the parent module (App::Dn::QkDeb) uses the real ("true") path of a file
which, in the case of symlinks, may have a different file name to the original
(symlink) file. This matters for the project files because, while it is the
real files that are copied to the build directory, they must retain their
original file names.
.PP
When creating an object the file is supplied (attribute 'file'). It is coerced
into an absolute path which is stored internally as a Path::Tiny object.
.PP
This package enables the original file names (method \f(CW\*(C`name\*(C'\fR) and real paths
(method \f(CW\*(C`real\*(C'\fR) to be retrieved.
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
.SS Properties
.IX Subsection "Properties"
.SS file
.IX Subsection "file"
File name. Stored as an absolute path (Path::Tiny::AbsFile) but will coerce
a string value. Required.
.SS "Configuration files"
.IX Subsection "Configuration files"
None used.
.SS "Environment variables"
.IX Subsection "Environment variables"
None used.
.SH SUBROUTINES/METHODS
.IX Header "SUBROUTINES/METHODS"
.SS \fBname()\fP
.IX Subsection "name()"
\fIPurpose\fR
.IX Subsection "Purpose"
.PP
Provide the supplied/original file name.
.PP
\fIParameters\fR
.IX Subsection "Parameters"
.PP
None.
.PP
\fIPrints\fR
.IX Subsection "Prints"
.PP
Nothing.
.PP
\fIReturns\fR
.IX Subsection "Returns"
.PP
Scalar string.
.SS \fBreal()\fP
.IX Subsection "real()"
\fIPurpose\fR
.IX Subsection "Purpose"
.PP
Provide the real (fully resolved) file name.
.PP
\fIParameters\fR
.IX Subsection "Parameters"
.PP
None.
.PP
\fIPrints\fR
.IX Subsection "Prints"
.PP
Nothing.
.PP
\fIReturns\fR
.IX Subsection "Returns"
.PP
Scalar string.
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
This module does not emit any custom error or warning messages.
.SH INCOMPATIBILITIES
.IX Header "INCOMPATIBILITIES"
None reported.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH DEPENDENCIES
.IX Header "DEPENDENCIES"
Const::Fast, Moo, namespace::clean, strictures, Types::Path::Tiny, version.
.SH AUTHOR
.IX Header "AUTHOR"
David Nebauer <david@nebauer.org>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2024 Nebauer <david@nebauer.org>
.PP
This script is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
