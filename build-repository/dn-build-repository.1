.\" Hey, EMACS: -*- nroff -*-
 
.\" Filename: dn-build-repository.1
.\" Author:   David Nebauer
.\" History:  2007-12-29 - created
 
.\" -----------------------------------------------------------------
.\" NOTES
.\" -----------------------------------------------------------------
.ig

For header (.TH), first parameter, NAME, should be all caps
Second parameter, SECTION, should be 1-8, maybe w/ subsection
Other parameters are allowed: see man(7), man(1)
Please adjust the date whenever revising the manpage.

Some roff macros, for reference:
.nh        disable hyphenation
.hy        enable hyphenation
.ad l      left justify
.ad b      justify to both left and right margins
.nf        disable filling
.fi        enable filling
.br        insert line break
.sp <n>    insert n+1 empty lines
for manpage-specific macros, see man(7)

Formatting [see groff_char (7) for details]:
\(aq  : escape sequence for (')
``    : left/open double quote
''    : right/close double quote
`     : left/open single quote
'     : right/close single quote
\(em  : escape sequence for em dash
\(en  : escape sequence for en dash
\.    : escape sequence for period/dot
\fX   : escape sequence that changes font, where 'X' can be 'R|I|B|BI'
        (R = roman/normal | I = italic | B = bold | BI = bold-italic)
\fP   : switch to previous font
        in this case '\fR' could also have been used
.B    : following arguments are boldened
.I    : following arguments are italicised
.BI   : following arguments are bold alternating with italics
.BR   : following arguments are bold alternating with roman
.IB   : following arguments are italics alternating with bold
.IR   : following arguments are italics alternating with roman
.RB   : following arguments are roman alternating with bold
.RI   : following arguments are roman alternating with italics
.SM   : following arguments are small (scaled 9/10 of the regular size)
.SB   : following arguments are small bold (not small alternating with bold) 
        [note: if argument in alternating pattern contains whitespace,
               enclose in whitespace]
.RS x : indent following lines by x characters
.RE   : end indent

Bulleted list:
   A bulleted list:
   .IP \[bu] 2
   lawyers
   .IP \[bu]
   guns
   .IP \[bu]
   money
Numbered list:
   .nr step 1 1
   A numbered list:
   .IP \n[step] 3
   lawyers
   .IP \n+[step]
   guns
   .IP \n+[step]
   money
..

.\" -----------------------------------------------------------------
.\" SETUP
.\" -----------------------------------------------------------------

.\" Package: -mwww macro package of web-related functions
.\"  note: -mwww package is part of GNU 'troff'.
.\"        The '.g' register is only found in GNU 'troff'
.\"        and is set to '1' (true).
.\"        The '\n' escape returns the value of a register.
.\"        So, this 'if' command ensures GNU 'troff' is
.\"        running before attempting to load the -mwww
.\"        macro package
.if \n[.g] .mso www.tmac

.\" Macro: Format URL
.\"  usage:  .UR "http:\\www.gnu.org" "GNU Project" " of the"
.\"  params: arg 1 = url ; arg 2 = link text/name ; arg 3 = postamble (optional)
.de UR
\\$2 \(laURL: \\$1 \(ra\\$3
..

.\" Macro: Ellipsis
.\"  usage: .ellipsis
.\"  note: only works at beginning of line
.de ellipsis
.cc ^
...
^cc
..

.\" String: Command name
.ds self dn-build-repository
.ds res_default rep-resources

.\" -----------------------------------------------------------------
.\" MANPAGE CONTENT
.\" -----------------------------------------------------------------

.TH "dn-build-repository" "1" "2007-12-29" "" "Dn-build-repository Manual"
.SH "NAME"
\*[self] \- build a Debian pooled repository
.SH "SYNOPSIS"
.BR "\*[self] " "["
.BR "\-t" " ] ["
.IR "resource_file" " ]"
.SH "DESCRIPTION"
\*[self] is an automated system for building a Debian repository.  The repository will contain package source and binaries and use a pooled architecture.
.PP
All script inputs are provided in a resource file which has a specific format (see RESOURCES FILE below for details).  The default resource file is \(aq$(cwd)/\*[res_default]\(aq.  Run \*[self] with the \(aq-t\(aq option to create a template resources file.  The resources file will be created in the current directory with the default name.
.PP
The resources file supplies a list of package directories.  Each directory is assumed to contain source and binary files for a single package.  The required files are:
.IP \[bu] 2
one or more binary \(aq.deb\(aq file(s),
.IP \[bu]
one \(aqdiff.gz\(aq file,
.IP \[bu]
one \(aq.dsc\(aq file, and
.IP \[bu]
one \(aq.orig.tar.gz\(aq file.
.PP
For example, the foo package (version 1.1) may consist of: \(aqfoo_1.1-1_i386.deb\(aq, \(aqfoo_1.1-1_sparc.deb\(aq, \(aqfoo_1.1-1.diff.gz\(aq, \(aqfoo_1.1-1.dsc\(aq and \(aqfoo_1.1.orig.tar.gz\(aq.
.PP
The script will take the first \(aq.deb\(aq file it finds in the directory (alphabetically) and assume it is from the package to be added to the repository.  The script does not check version numbers of files within a directory.  For example, it assumes \(aqfoo_xxxx_i386.deb\(aq and \(aqfoo_xxxx.diff.gz\(aq are from the same package, whether or not \(aqxxxx\(aq are identical, or even contain the same number of characters.
.PP
If multiple files match a single pattern the directory is declared invalid.  An example would be the presence of \(aqfoo_1.1-1_i386.deb\(aq and \(aqfoo_20041012.0.0.1-1_i386.deb\(aq in the same directory.
.PP
See RESOURCES FILE below for other information supplied by the resources file.
.SH LIMITATIONS
\*[self] does not take advantage of all the flexibility provided by the Debian repository architecture.  The repositories it creates have the following significant limitations.
.SS Archive \(aqflavours\(aq
A repository can contain multiple \(aqflavours\(aq.  Valid flavours are \(aqstable\(aq, \(aqtesting\(aq and \(aqunstable\(aq.  All specified packages are included in each selected archive flavour sub-tree.  Each archive flavour sub-tree is identical
\(em you cannot have different packages, or different versions of the same package, between archive flavours.
.SS Component
Repositories created by this script can contain only one component.  Valid components are \(aqmain\(aq, \(aqcontrib\(aq or \(aqnon-free\(aq.  All packages, and archive flavours, are put in that component sub-tree.
.SS Spaces in paths
File and directory paths must not contain any spaces. Although they can contain spaces and still be acceptable to the file system, this script will not accept them, even if the spaces are escaped or the path is enclosed in quotes.
.SH "OPTIONS"
.TP 
.B "\-t"
Instead of creating a repository, \*[self] creates a template resources file in the current directory.  The resources file is given the default name (\(aq\*[res_default]\(aq).  Optional.
.TP 
.I "resources_file"
Filepath of resources file.  If not supplied, \*[self] will look in the current directory for the default resources file (\(aq\*[res_default]\(aq).  Optional.
.SH "RESOURCES FILE"
As described above, the default resources file is named \(aq\*[res_default]\(aq and located in the current directory.  If the resources file to be used has another name and/or location, it must be passed to \*[self] as a parameter.  The filepath can be relative or absolute.
.PP
The easiest way to create a resources file is to run \*[self] with the \(aq-t\(aq option.  This creates a template resources file, given the default name, in the current directory.  This file is self-documenting.
.PP
The resources file supplies a number of settings via whitespace-separated name-value pairs.  The \(aq#\(aq character denotes comments.  The following are the settings provided by the resources file:
.SS Repository Directory
.IP \[bu] 2
Name: \(aqrepository_dir\(aq.
.IP \[bu]
Directory must exist, be readable and empty.
.IP \[bu]
Required.  One only.
.SS Repository Name
.IP \[bu] 2
Name: \(aqrepository_name\(aq.
.IP \[bu]
Base of repository archive name, e.g., \(aqfoo\(aq gives \(aqfoo.tar.gz\(aq.
.IP \[bu]
Required.  One only.
.SS Flavour
.IP \[bu] 2
Name: \(aqflavour\(aq.
.IP \[bu]
Debian comes in different \(aqreleases\(aq, \(aqdistributions\(aq or \(aqversions\(aq, referred to here as \(aqflavours\(aq to minimise confusion.  A repository commonly has two levels: flavour/component.
.IP \[bu]
Valid flavours: \(aqunstable\(aq, \(aqtesting\(aq and \(aqstable\(aq.
.IP \[bu]
A single repository can contain multiple flavours.
.IP \[bu]
Required.  Multiple allowed.
.SS Component
.IP \[bu] 2
Name: \(aqcomponent\(aq.
.IP \[bu]
A repository commonly has two levels: flavour/component.  Each flavour can contain multiple components.
.IP \[bu]
Valid components: \(aqmain\(aq, \(aqnon-free\(aq and \(aqcontrib\(aq
.IP \[bu]
Note: Repositories created by \*[self] can have multiple flavours, but each flavour has the same single component.
.IP \[bu]
Required.  One only.
.SS Origin
.IP \[bu] 2
Name: \(aqorigin\(aq.
.IP \[bu]
Person or organisation creating archive.  It often contains an email address, e.g., \(aqJohn Citizen <j.citizen@isp.net>\(aq.
.IP \[bu]
Required.  One only.
.SS Label
.IP \[bu] 2
Name: \(aqlabel\(aq.
.IP \[bu]
User-created label for repository.  It is often an explanation of the repository's purpose, e.g., \(aqMy personal packages\(aq.
.IP \[bu]
Required.  One only.
.SS Validity Checking
.IP \[bu] 2
Name: \(aqrelax_check\(aq.
.IP \[bu]
\*[self] will, by default, perform extensive checks on package files in each package directory.  Checks include: ensuring package files match on name, version and extension; ensuring only one deb package of each type is present, e.g., \(aqi386\(aq, \(aqsparc\(aq and \(aqalpha\(aq; and ensuring no package file type is missing, e.g., requires \(aqdiff.gz\(aq, \(aqdsc\(aq, \(aqorig.tar.gz\(aq and \(aqdeb\(aq files.
.IP \[bu]
If you uncheck this option, these checks will not be performed.  This is dangerous and should be done with caution.
.IP \[bu]
This option is intended for (rare) cases where one or more source files have a different name and/or version to corresponding deb files.
.IP \[bu]
Note: This setting is an exception in that it is not a \(aqname-value\(aq pair but simply a \(aqname\(aq without any accompanying \(aqvalue\(aq.
.IP \[bu]
Optional.  One only.
.SH "AUTHOR"
\*[self] was written by David Nebauer <david@nebauer.org>.
.PP 
This manual page was written by David Nebauer <david@nebauer.org>
for the Debian project (but may be used by others).
