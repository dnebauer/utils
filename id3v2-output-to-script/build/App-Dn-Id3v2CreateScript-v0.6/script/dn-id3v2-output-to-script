#!/usr/bin/perl

use Moo;
use strictures 2;
use 5.006;
use 5.038_001;
use version; our $VERSION = qv('0.6');
use namespace::clean;
use App::Dn::Id3v2CreateScript;

App::Dn::Id3v2CreateScript->new_with_options->run;

1;

# POD    {{{1

__END__

=head1 NAME

dn-id3v2-output-to-script - converts id3v2 output to a script

=head1 USAGE

B<dn-id3v2-output-to-script> [ B<-i> I<file> ] [ B<-o> I<file> ]

B<dn-id3v2-output-to-script -h>

=head1 DESCRIPTION

Convert id3v2 output (created using the C<--list> option) to a bash script. The
bash script contains an C<id3v2> command for each mp3 file which sets its tags
to those present in the initial output. Any id3v1 tag information in the input
is ignored. The id3v2 output can be provided to this script as stdin (default)
or as a file. The bash script output produced can be sent to stdout (default)
or to a file. If output is sent to a file the created file is set to executable
(permissions 0755).

This may seem to be a pointless script: when would it ever be necessary to set
mp3 file tags to the values they already have? One applicable scenario, and the
impetus for this script, is that on some occasions the id3v2 utility is unable
to modify existing tags on some mp3 files. In those cases it is necessary to
remove all tags and set them anew.

Warning: for any mp3 files containing an album image the image is extracted to
the same directory as the mp3 file.  The image file has the same base name as
the mp3 file, with an extension determined by the image format (e.g.,
F<.jpeg>).  Existing image files with the same name and extensions are silently
overwritten. An extra C<eyeD3> command is added to the script file for each
image file generated. This command adds the image to the mp3 file.

=head1 CONFIGURATION

There is no configuration file and no configuration settings.

=head1 REQUIRED ARGUMENTS

Nil.

=head1 OPTIONS

=over

=item B<-i>  B<--input-file>

Path to input file containing id3v2 output. Must exist.

Optional. Default: use stdin.

=item B<-o>  B<--output-file>

Path to bash script output file. Need not exist.

Optional. Default: use stdout.

=item B<-h>  B<--help>

Display help and exit.

=back

=head1 EXIT STATUS

The script exits with a zero value if successful and a non-zero value if a
fatal error occurs.

=head1 DIAGNOSTICS

=head2 Cannot extract COMM value from: FILEPATH

This error occurs when a comment (COMM tag) line is detected but the regular
expression matcher is unable to match the comment text.

=head2 Cannot extract TAG value from: FILEPATH

This error occurs when a id3v2 tag line (a tag other than APIC or COMM) is
detected but the regular expression matcher is unable to match the tag content.

=head2 Cannot find file 'FILEPATH'

This error occurs when an invalid input filepath is provided.

=head2 Cannot write 'FILEPATH': OS_ERROR

This error occurs when the script is unable to write its script output to a
file.

=head2 Couldn't read tags: FILEPATH

This error occurs when attempting to extract an image from an mp3 file. It
occurs because the L<MP3::Tag> module does not extract any tags from the mp3
file.

=head2 Invalid mp3 file path: FILEPATH

This error occurs when attempting to extract an image from an mp3 file. It
occurs because the derived file path is invalid. If this error occurs it
indicates problem with the script design.

=head2 No artwork data found: FILEPATH

This warning is issued if the script detects an APIC tag but is unable to
extract image data using the L<MP3::Tag> module.

=head2 No ID3v2 tags: FILEPATH

This error occurs when attempting to extract an image from an mp3 file. It
occurs because the L<MP3::Tag> module does not extract any id3v2 tags from the
mp3 file.

=head2 Unable to extract file path

The id3v2 output line signifying the start of id3v2 tag data has the format:

    id3v2 tag info for FILEPATH:

This script extracts the filepath from this line. It generates this error if
the regular expression matcher is unable to match the filepath.

=head2 Unable to set 'FILEPATH' executable

After the script file is generated (if the C<-o> option is used) it is set to
the permissions 0755, i.e., executable. This error occurs if that operation
fails.

=head1 INCOMPATIBILITIES

There are no known incompatibilities.

=head1 BUGS AND LIMITATIONS

Please report any bugs to the author.

=head1 DEPENDENCIES

=head2 Perl modules

App::Dn::Id3v2CreateScript, Moo, namespace::clean, strictures, version.

=head1 AUTHOR

David Nebauer (david at nebauer dot org)

=head1 LICENSE AND COPYRIGHT

Copyright (c) 2024 David Nebauer (david at nebauer dot org)

This script is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.

=cut

# vim:foldmethod=marker:
