# dn-qk-deb resources file
# [generated by dn-qk-deb on 2015-04-23 at 22:40]
# -------------------------------------------------------------
# Each line consists of name-value pairs
# separated by whitespace. If any name or value contains
# whitespace it must be enclosed by double quotation marks.
# Empty lines and comment lines (beginning with hashes)
# are ignored.
# Any unrecognised name will generate a warning but
# not stop processing.
# Some names can be used only once while others can
# be used multiple times.
# -------------------------------------------------------------

# Package name
# Name of the package to be generated.
# Must not contain whitespace.
# Required. One only.
package-name dn-perlcritic

# Package version
# Version number for package.
# Required. One only.
version 0.4

# Script and binary files
# Executable files to be packaged.
# Can be standard ('bin-files') or superuser-only ('sbin-files').
# Default value of 'bin-files' in built deb package: /usr/bin
# Default value of 'sbin-files' in built deb package: /usr/sbin
# Required. Multiple allowed
bin-file dn-perlcritic
#sbin-file 

# Manpages
# Man pages to package.
# Default value in built deb package: /usr/share/man/man1
# Required. Multiple allowed.
man-file dn-perlcritic.1

# Data files
# Data files to package.
# Default value in built deb package: /usr/share/$(PACKAGE).
# Optional. Multiple allowed.
#data-file 

# Icon files
# Icon files to package.
# Must be xpm format no larger than 32x32.
# Useful command is: 'convert icon.png -geometry 32x32 icon.xpm'.
# Default value in built deb package: /usr/share/icons.
# Note icons are not put into application subdirectory
# -- be careful of filename clashes.
# Optional. Multiple allowed.
#icon-files 

# Configuration files
# Configuration files to package.
# Default value in built deb package: /etc/$(PACKAGE).
# Optional. Multiple allowed.
#conf-file 

# Executable library files
# Executable programs run by other programs.
# Since multiarch implementation this path includes a subdirectory
# whose name is an architecture-based triplet.
# The triplet name is obtained with the command:
#   dpkg-architecture -qDEB_HOST_MULTIARCH
    # Default value in built deb package: /usr/lib/<triplet>/$(PACKAGE).
# Optional. Multiple allowed.
#libexec-files 

# Library data files
# Data files used by other programs.
# Since multiarch implementation this path includes a subdirectory
# whose name is an architecture-based triplet.
# The triplet name is obtained with the command:
#   dpkg-architecture -qDEB_HOST_MULTIARCH
# Default value in built deb package: /usr/lib/<triplet>/$(PACKAGE).
# Optional. Multiple allowed.
#libdata-files 

# Templates file
# Debian build system templates file
# Optional. One only
#templates 

# Pre-install file
# Debian build system pre-install file
# Optional. One only
#preinstall 

# Post-install file
# Debian build system post-install file
# Optional. One only
#postinstall 

# Pre-remove file
# Debian build system pre-remove file
# Optional. One only
#preremove 

# Post-remove file
# Debian build system post-remove file
# Optional. One only
#postremove 

# Bash completion file
# Debian build system bash completion file
# Optional. One only
#bash-completion 

# Install file
# Debian build system install file
# In final package is named 'PACKAGE.install'
# Can be used in conjunction with 'extra' key
# Optional. One only
install-file install-file
 
# Extra files and directories
# Extra distribution files and directories
# Copied recursively into root of distribution
# Not added to deb package unless in combination
# with an install file (see 'install-file' key)
# Optional. Multiple allowed
extra-path contrib
 
# Control summary
# One line summary of script for inclusion in the
# package 'control' file.
# This, in turn, is displayed by many package managers.
# Must be no longer than 60 characters.
# Required. One only.
control-summary perlcritic enhanced for Moose

# Control description
# Description of script. This is a longer description
# than the one line summary and can stretch over
# multiple lines. Each line can be no longer than
# 60 characters. Paragraphs can be separated by a line
# consisting of a single period ('.'). This description
# will be included in the package 'control' file. This,
# in turn, is displayed by many package managers.
# Required. Multiple allowed.
control-description In addition to Perl::Critic uses module:
control-description Perl::Critic::Moose.

# Dependency
# The name of a single package this package depends on.
# Can include minimum version.
# Optional. Multiple allowed.

#   perl, carp, Cwd, English, Moo
depends-on libmoo-perl (>= 2.000001-3)

#   File::MimeInfo::Magic
depends-on libfile-mimeinfo-perl (>= 0.26-1)

#   Function::Parameters
depends-on libfunction-parameters-perl (>= 1.0603-1)

#   List::Util
depends-on libscalar-list-utils-perl (>= 1:1.47-1)
 
#   MooX::Options
depends-on libmoox-options-perl (>= 4.018-1)

#   namespace::clean
depends-on libnamespace-clean-perl (>= 0.25-1)

#   Perl::Critic
depends-on libperl-critic-perl (>= 1.122-1)

#   Perl::Critic::Moose
depends-on libperl-critic-moose-perl (>= 1.02-1)

#   Readonly
depends-on libreadonly-perl (>= 2.000-1)

#   Test::File
depends-on libtest-file-perl (>= 1.41-1)

#   Type::Library, Type::Utils, Types::Standard
depends-on libtype-tiny-perl (>= 1.000005-1)

#   version
depends-on libversion-perl (>= 1:0.9912-1)

# Copyright year
# Year of copyright
# Required. One only.
year 2015

# Email
# Email address of package maintainer
# Required. One only.
email david@nebauer.org

# Author
# Author of script
# Required. Multiple allowed.
author David Nebauer
