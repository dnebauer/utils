.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::Dn::UpdateContextMaillist 3pm"
.TH App::Dn::UpdateContextMaillist 3pm 2024-07-28 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
App::Dn::UpdateContextMaillist \- updates local copy of ntg\-context mailing list
.SH VERSION
.IX Header "VERSION"
This documentation is for \f(CW\*(C`App::Dn::UpdateContextMaillist\*(C'\fR version 0.7.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\&    use App::Dn::UpdateContextMaillist;
\&
\&    App::Dn::UpdateContextMaillist\->new_with_options\->run;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Download the ntg_context mailing list archive for the current year. (If
performing the first update of the year, also do a final update of the previous
year.)
.PP
Uses the \f(CW\*(C`Dn::MboxenSplit\*(C'\fR module to extract individual emails and writes to
\&\fI~/data/computing/text\-processing/context/mail\-list/\fR an mbox file for every
email message which is not already captured in the directory.
.PP
Displays feedback on screen unless the \f(CW\*(C`\-l\*(C'\fR option is used, in which case the
result (and any errors or warnings) are written to the system log.
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
.SS Options
.IX Subsection "Options"
\fI\-l | \-\-log\fR
.IX Subsection "-l | --log"
.PP
Log output rather than display on screen. Note that the Dn::MboxenSplit module
will display some screen output regardless of this option.
.PP
Flag. Optional. Default: false.
.PP
\fI\-h | \-\-help\fR
.IX Subsection "-h | --help"
.PP
Display help and exit.
.SS Properties/attributes
.IX Subsection "Properties/attributes"
There are no public attributes.
.SS "Configuration files"
.IX Subsection "Configuration files"
Uses a configuration file to save the year of the most recent update. When
running the script looks in turn for the configuration files:
.IP \(bu 4
\&\fI~/.config/dn\-update\-context\-maillist.conf\fR
.IP \(bu 4
\&\fI~/.dn\-update\-context\-maillistrc\fR
.PP
and uses the first one it finds.
.PP
If neither configuration file exists, it will create
\&\fI~/.config/dn\-update\-context\-maillist.conf\fR if the \fI~/.config\fR directory
exists, otherwise it creates \fI~/.dn\-update\-context\-maillistrc\fR.
.SS "Environment variables"
.IX Subsection "Environment variables"
None used.
.SH SUBROUTINES/METHODS
.IX Header "SUBROUTINES/METHODS"
.SS \fBrun()\fP
.IX Subsection "run()"
This is the only public method. It updates a local copy of ntg-context mailing
list as described in "DESCRIPTION".
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
.SS "Can't create config file 'FILE'"
.IX Subsection "Can't create config file 'FILE'"
Occurs when the system is unable to create the configuration file.
.SS "Invalid type 'TYPE'"
.IX Subsection "Invalid type 'TYPE'"
Occurs when attempting to write a log message with an invalid type.
Valid types are: EMERG ALERT CRIT ERR WARNING NOTICE INFO DEBUG.
.SH INCOMPATIBILITIES
.IX Header "INCOMPATIBILITIES"
There are no known incomptibilities.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH DEPENDENCIES
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
Config::Tiny, Const::Fast, Dn::MboxenSplit, English, File::Basename,
File::HomeDir, File::Spec, File::Temp, File::Touch, File::Util,
IO::Interactive, LWP::Simple, Moo, MooX::HandlesVia, MooX::Options,
namespace::clean, Role::Utils::Dn, strictures, Sys::Syslog, Types::Standard,
version.
.SH AUTHOR
.IX Header "AUTHOR"
David Nebauer <david@nebauer.org>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2024 David Nebauer <david@nebauer.org>
.PP
This script is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
