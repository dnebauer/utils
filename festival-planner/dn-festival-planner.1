.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DN-FESTIVAL-PLANNER 1"
.TH DN-FESTIVAL-PLANNER 1 "2016-03-26" "perl v5.30.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dn\-festival\-planner \- store festival data and write it to an html file
.SH "USAGE"
.IX Header "USAGE"
\&\fBdn-festival-planner \fR [ \fB\-s\fR \fIfile\fR ] [ \fB\-l\fR ] [ \fB\-w\fR ]
.PP
\&\fBdn-festival-planner \-h\fR
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-s\fR \fIfile\fR" 4
.IX Item "-s file"
Path to data store. Can be relative or absolute.
.Sp
Optional. Default: \fIfestival.data\fR.
.IP "\fB\-l\fR" 4
.IX Item "-l"
List events and exit. Boolean.
.Sp
Optional. Default: false.
.IP "\fB\-w\fR" 4
.IX Item "-w"
Write output files and exit. Boolean.
.Sp
Optional. Default: false.
.IP "\fB\-h\fR" 4
.IX Item "-h"
Display help and exit.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Used to store details of festival events (or, indeed, events for any multi-day event). The script was originally developed for recording details of various events at the Royal Sydney Easter Show.
.PP
The user is required to enter the festival name. It serves as the title of the html output page.
.SS "Event details"
.IX Subsection "Event details"
Each event is assumed to begin and end during a single day.
.PP
For each event the following details are recorded:
.RS 4
.IP "\fIDate\fR" 4
.IX Item "Date"
The day on which the event occurs.
.Sp
It is assumed all events start and finish within a single day, that is, there are no events spread over multiple days.
.Sp
For each event the user is presented with a list of dates for which events have already been defined. The most recently used date will be pre-selected. If the user wants to use a new date they simply exit the menu.
.Sp
\&\s-1ISO\s0 format. Required.
.IP "\fIStart time\fR" 4
.IX Item "Start time"
Time the event begins.
.Sp
The time can be in '\s-1HHMM\s0' format, in which leading zeroes must be entered, or '\s-1HH:MM\s0' format, in which leading zeroes can be dropped.
.Sp
Optional.
.IP "\fIEnd time\fR" 4
.IX Item "End time"
Time the event ends.
.Sp
The time can be in '\s-1HHMM\s0' format, in which leading zeroes must be entered, or '\s-1HH:MM\s0' format, in which leading zeroes can be dropped.
.Sp
Optional.
.IP "\fIName\fR" 4
.IX Item "Name"
Event name or title.
.Sp
For each event the user is presented with a list of event names that have already been defined. The most recently used event name will be pre-selected. If the user wants to enter a new name they simply exit the menu.
.Sp
Required.
.IP "\fILocation\fR" 4
.IX Item "Location"
Location at which event is held.
.Sp
The user is provided with assistance to enter the event location. If the event name has been entered previously, the user is presented with a list of locations at which that event has previously been held. If the most recently entered location is in that list, it is pre-selected. If the user exits that menu without selecting a location, they are then presented with a list of \fIall\fR previously entered locations (if there are any). If the user exits that menu without selecting a location, they are able to enter the location manually.
.Sp
Required.
.RE
.RS 4
.RE
.PP
On exiting data is saved to a persistent data store (default: \fIfestival.data\fR) if data has been added or edited. When the script is next run the data is loaded from that data store. Note that a different file name can be used (see the \fI\-s\fR option).
.PP
Entered event details can be edited and entire events can be deleted.
.SS "Main menu options"
.IX Subsection "Main menu options"
The following options are available from the main menu:
.RS 4
.IP "\fIAdd events\fR" 4
.IX Item "Add events"
This option enables the user to enter new events. For date, name and location the user is able to select from previously entered values. If none is suitable the user can enter a new value.
.IP "\fIChange festival name\fR" 4
.IX Item "Change festival name"
The user can edit the festival name.
.IP "\fIList events\fR" 4
.IX Item "List events"
Displays existing events in the terminal. Date and time are formatted such that their column widths are constant.
.IP "\fIEdit events\fR" 4
.IX Item "Edit events"
Enables the user to select existing events in turn and change any of their details.
.IP "\fIDelete events\fR" 4
.IX Item "Delete events"
Enables the user to select existing events in turn and delete them.
.IP "\fIWrite output files\fR" 4
.IX Item "Write output files"
Writes the following output files to the current directory:
.RS 4
.RS 4
.IP "\fIindex.html\fR" 4
.IX Item "index.html"
\&\s-1HTML\s0 file displaying festival details. It is optimised for small screen devices.
.IP "\fI.htaccess\fR and \fImanifest.appcache\fR" 4
.IX Item ".htaccess and manifest.appcache"
Ensure caching of jquery libraries loaded by \fIindex.html\fR.
.IP "\fIfavicon.png\fR" 4
.IX Item "favicon.png"
An icon that can be used by operating systems to represent the web page. The provided icon is for the Sydney Royal Easter Show. It can be replaced with an appropriate 32x32 png file.
.RE
.RS 4
.RE
.RE
.RS 4
.RE
.IP "\fIRename events\fR" 4
.IX Item "Rename events"
Enables the user to select an event name and change it. This should be used with caution as every event with this name will be renamed.
.IP "\fIRename locations\fR" 4
.IX Item "Rename locations"
Enables the user to select locations in turn and change them. This should be used with caution as a location will be changed in every event having that location, regardless of event names, i.e., different events occurring at that location will all have their location changed.
.IP "\fISave data\fR" 4
.IX Item "Save data"
Save existing data to the data store. This option should not be required as data is automatically saved on exit from the script if it has changed.
.RE
.RS 4
.RE
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
autodie, Carp, Date::Simple, Dn::Common, Dn::Menu, English, experimental, Function::Parameters, HTML::Template, List::MoreUtils, Moo, MooX::HandlesVia, MooX::Options, namespace::clean, Readonly, Storable, strictures, Time::Simple, Types::Standard, version.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH "AUTHOR"
.IX Header "AUTHOR"
David Nebauer <davidnebauer@hotkey.net.au>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2015 David Nebauer <davidnebauer@hotkey.net.au>
.PP
This script is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
