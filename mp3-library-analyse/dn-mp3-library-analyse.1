.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DN-MP3-LIBRARY-ANALYSE 1"
.TH DN-MP3-LIBRARY-ANALYSE 1 2024-03-16 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
dn\-mp3\-library\-analyse \- analyse mp3 files recursively
.SH USAGE
.IX Header "USAGE"
\&\fBdn\-mp3\-library\-analyse\fR \fB\-a\fR \fIanalysis\fR [\fB\-l\fR] [\fB\-f\fR \fIlogfile\fR]
.PP
\&\fBdn\-mp3\-library\-analyse \-h\fR
.SH "REQUIRED ARGUMENTS"
.IX Header "REQUIRED ARGUMENTS"
There are no required arguments.
.SH OPTIONS
.IX Header "OPTIONS"
.IP "\fB\-a\fR  \fB\-\-analyse\fR" 4
.IX Item "-a --analyse"
The analysis to perform on the mp3 audio files. Valid keywords:
\&'missing_key_tags'. Required.
.IP "\fB\-f\fR  \fB\-\-log_file\fR" 4
.IX Item "-f --log_file"
Path to log file. Directory part of path must exist. Optional.
.IP "\fB\-l\fR  \fB\-\-use_logger\fR" 4
.IX Item "-l --use_logger"
Output feedback to a log file. Default: \fI~/tmp/dn\-mp3\-library\-analyse.log\fR.
Optional.
.IP \fB\-h\fR 4
.IX Item "-h"
Display help and exit.
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Search the current directory recursively for subdirectories that contain mp3
audio files. For each of those (sub)directories perform an analysis determined
by the \f(CW\*(C`\-a\*(C'\fR option. All subdirectories meeting the criteria of the analysis
are printed to STDOUT, one per line.
.PP
If the \f(CW\*(C`\-l\*(C'\fR flag is used then feedback is logged to a log file. A file path to
the log file can be specified with the \f(CW\*(C`\-f\*(C'\fR option. If no file path is
provided, the default log file path \fI~/tmp/dn\-mp3\-library\-analyse.log\fR is
used. If the directory component of the log file path is not present, the
script exits with a fatal error.
.PP
The exact feedback written to the log file depends on the analysis performed.
.SS "Analysis: missing_key_tags"
.IX Subsection "Analysis: missing_key_tags"
If this analysis is selected each (sub)directory is scanned for mp3 audio files
missing any of the following id3v2 tags: album art (APIC), album (TALB), genre
(TCON), title (TIT2), artist (TPE1), and track (TRCK). Directories meeting this
criteria are output to stdout. The feedback written to the log file is of the
form:
.PP
.Vb 5
\&    /full/path/to/directory:
\&      \- d1_01_audio\-file\-name.mp3
\&        . album_art, album, artist, genre, title, track
\&      \- d2_11_audio\-file\-name.mp3
\&        . genre, track
.Ve
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
.SS "Invalid analysis: \fIanalysis\fP"
.IX Subsection "Invalid analysis: analysis"
Occurs when an invalid analysis keyword is provided to the \f(CW\*(C`\-a\*(C'\fR option.
.SS "No analysis specified"
.IX Subsection "No analysis specified"
Occurs when no analysis keyword is provided.
.SS "Option \fIx\fP requires and argument"
.IX Subsection "Option x requires and argument"
Occurs when no argument is provided to an option that requires one.
.SS "Unknown option: \fIx\fP"
.IX Subsection "Unknown option: x"
Occurs when an invalid option is supplied.
.SH DEPENDENCIES
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
Carp, Const::Fast, Cwd, Encode, English, Env, File::Spec, Log::Log4perl, Moo,
MooX::Options, namespace::clean, Path::Iterator::Rule, Role::Utils::Dn,
strictures, Types::Standard, version.
.SS Executables
.IX Subsection "Executables"
id3v2.
.SH CONFIGURATION
.IX Header "CONFIGURATION"
There is no configuration for this script.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
This script exits with a successful status unless a fatal error has been
thrown by:
.IP \(bu 4
the script, in which case it exits with error code 1
.IP \(bu 4
an underlying module or by the operating system, in which case it exits
with the underlying error code.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH INCOMPATIBILITIES
.IX Header "INCOMPATIBILITIES"
There are no known incompatibilities.
.SH AUTHOR
.IX Header "AUTHOR"
David Nebauer (david at nebauer dot org)
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2021 David Nebauer (david at nebauer dot org)
.PP
This script is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
